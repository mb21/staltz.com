-----BEGIN PGP MESSAGE-----
Comment: https://keybase.io/download
Version: Keybase Go 4.0.0 (linux)

xA0DAAoBnt4j6n6KSJABy+F0AOIAAAAA7i0tLQpsYXlvdXQ6IHBvc3QKdGl0bGU6
ICJTb2Z0d2FyZSBiZWxvdyB0aGUgcG92ZXJ0eSBsaW5lIgp0YWdzOiBbYmxvZ10K
LS0tCgpNb3N0IHBlb3BsZSBiZWxpZXZlIHRoYXQgW29wZW4gc291cmNlIHN1c3Rh
aW5hYmlsaXR5IGlzIGEgZGlmZmljdWx0IHByb2JsZW1dKGh0dHBzOi8vd3d3LmZv
cmRmb3VuZGF0aW9uLm9yZy9hYm91dC9saWJyYXJ5L3JlcG9ydHMtYW5kLXN0dWRp
ZXMvcm9hZHMtYW5kLWJyaWRnZXMtdGhlLXVuc2Vlbi1sYWJvci1iZWhpbmQtb3Vy
LWRpZ2l0YWwtaW5mcmFzdHJ1Y3R1cmUvKSB0byBzb2x2ZS4gQXMgYW4gb3BlbiBz
b3VyY2UgZGV2ZWxvcGVyIG15c2VsZiwgbXkgb3duIHBlcnNwZWN0aXZlIHRvIHRo
aXMgcHJvYmxlbSB3YXMgbW9yZSBvcHRpbWlzdGljOiBJIGJlbGlldmUgaW4gdGhl
IGRvbmF0aW9uIG1vZGVsLCBmb3IgaXRzIHNpbXBsaWNpdHkgYW5kIHBvc3NpYmls
aXR5IHRvIHNjYWxlLgoKSG93ZXZlciwgSSByZWNlbnRseSBtZXQgb3RoZXIgb3Bl
biBzb3VyY2UgZGV2ZWxvcGVycyB0aGF0IG1ha2UgYSBsaXZpbmcgZnJvbSBkb25h
dGlvbnMsIGFuZCB0aGV5IGhlbHBlZCB3aWRlbiBteSBwZXJzcGVjdGl2ZS4gQXQg
QW1zdGVyZGFtLmpzLCBJIGhlYXJkIFtIZW5yeSBaaHUgc3BlYWsgYWJvdXQgc3Vz
dGFpbmFiaWxpdHldKGh0dHBzOi8vZ2l0aHViLmNvbS9oem9vL29wZW4tc291cmNl
LWNoYXJpdHktb3ItYnVzaW5lc3MvKSBpbiB0aGUgQmFiZWwgcHJvamVjdCBhbmQg
YmV5b25kLCBhbmQgaXQgd2FzIGEgcHJldHR5IGRpcmUgcGljdHVyZS4gTGF0ZXIs
IG92ZXIgYnJlYWtmYXN0LCBIZW5yeSBhbmQgSSBoYWQgYSBkZWVwZXIgY29udmVy
c2F0aW9uIG9uIHRoaXMgdG9waWMuIEluIEFtc3RlcmRhbSBJIGFsc28gbWV0IHVw
IHdpdGggW1RpdHVzXShodHRwczovL2dpdGh1Yi5jb20vd29vb3JtKSwgd2hvIG1h
aW50YWlucyB0aGUgW1VuaWZpZWRdKGh0dHBzOi8vdW5pZmllZC5qcy5vcmcvKSBw
cm9qZWN0IGZ1bGwtdGltZS4gTWVldGluZyB3aXRoIHRoZXNlIHBlb3BsZSBJIGNv
bmZpcm1lZCBteSBiZWxpZWYgaW4gdGhlIGRvbmF0aW9uIG1vZGVsIGZvciBzdXN0
YWluYWJpbGl0eS4gSXQgd29ya3MuIEJ1dCwgd2hhdCByZWFsbHkgc3Rvb2Qgb3V0
IHRvIG1lIHdhcyB0aGUgcXVlc3Rpb246IGlzIGl0IGZhaXI/CgpJIGRlY2lkZWQg
dG8gY29sbGVjdCBkYXRhIGZyb20gT3BlbkNvbGxlY3RpdmUgYW5kIEdpdEh1Yiwg
YW5kIHRha2UgYSBtb3JlIHNjaWVudGlmaWMgc2FtcGxlIG9mIHRoZSBzaXR1YXRp
b24uIFRoZSByZXN1bHRzIEkgZm91bmQgd2VyZSBzaG9ja2luZzogdGhlcmUgd2Vy
ZSB0d28gY2xlYXJseSBzdXN0YWluYWJsZSBvcGVuIHNvdXJjZSBwcm9qZWN0cywg
YnV0IHRoZSBtYWpvcml0eSAobW9yZSB0aGFuIDgwJSkgb2YgcHJvamVjdHMgdGhh
dCB3ZSB1c3VhbGx5IGNvbnNpZGVyIHN1c3RhaW5hYmxlIGFyZSBhY3R1YWxseSBy
ZWNlaXZpbmcgaW5jb21lIGJlbG93IGluZHVzdHJ5IHN0YW5kYXJkcyBvciBldmVu
IGJlbG93IHRoZSBwb3ZlcnR5IHRocmVzaG9sZC4KCiMjIFdoYXQgdGhlIGRhdGEg
c2F5cwoKSSBwaWNrZWQgW3BvcHVsYXIgb3BlbiBzb3VyY2UgcHJvamVjdHNdKGh0
dHBzOi8vb3BlbmNvbGxlY3RpdmUuY29tL2Rpc2NvdmVyKSBmcm9tIE9wZW5Db2xs
ZWN0aXZlLCBhbmQgc2VsZWN0ZWQgdGhlIHllYXJseSBpbmNvbWUgZGF0YSBmcm9t
IGVhY2guIFRoZW4gSSBsb29rZWQgdXAgdGhlaXIgR2l0SHViIHJlcG9zaXRvcmll
cywgdG8gbWVhc3VyZSB0aGUgY291bnQgb2Ygc3RhcnMsIGFuZCBob3cgbWFueSAi
ZnVsbC10aW1lIiBjb250cmlidXRvcnMgdGhleSBoYXZlIGhhZCBpbiB0aGUgcGFz
dCAxMiBtb250aHMuIFNvbWV0aW1lcyBJIGFsc28gbG9va2VkIHVwIHRoZSBQYXRy
ZW9uIHBhZ2VzIGZvciB0aG9zZSBmZXcgbWFpbnRhaW5lcnMgdGhhdCBoYWQgb25l
LCBhbmQgYWRkZWQgdGhhdCBkYXRhIHRvIHRoZSB5ZWFybHkgaW5jb21lIGZvciB0
aGUgcHJvamVjdC4gRm9yIGluc3RhbmNlLCBpdCBpcyBvYnZpb3VzIHRoYXQgRXZh
biBZb3UgZ2V0cyBtb25leSBvbiBbUGF0cmVvbiB0byB3b3JrIG9uIFZ1ZS5qc10o
aHR0cHM6Ly93d3cucGF0cmVvbi5jb20vZXZhbnlvdSkuIFRoZXNlIGRhdGEgcG9p
bnRzIGFsbG93ZWQgbWUgdG8gbWVhc3VyZTogcHJvamVjdCAqKnBvcHVsYXJpdHkq
KiAoYSBwcm9wb3J0aW9uYWwgaW5kaWNhdG9yIG9mIHRoZSBudW1iZXIgb2YgdXNl
cnMpLCAqKnllYXJseSByZXZlbnVlKiogZm9yIHRoZSB3aG9sZSB0ZWFtLCBhbmQg
Kip0ZWFtIHNpemUqKi4KCkl0IGlzIGRpZmZpY3VsdCB0byBkZXJpdmUgZXhhY3Rs
eSBob3cgbWFueSB1c2VycyB0aGVyZSBhcmUgZm9yIGVhY2ggcHJvamVjdCwgc3Bl
Y2lhbGx5IGJlY2F1c2UgdGhleSBtYXkgYmUgdHJhbnNpdGl2ZSB1c2Vycywgbm90
IGF3YXJlIHRoYXQgdGhleSBhcmUgdXNpbmcgdGhlIHByb2plY3QuIFRoaXMgaXMg
d2h5IEkgd2VudCB3aXRoIEdpdEh1YiBzdGFycyBhcyBhIGdvb2QgZW5vdWdoIG1l
YXN1cmVtZW50IGZvciB1c2VyIGNvdW50LCBiZWNhdXNlIGl0IGNvdW50cyAqcGVy
c29ucyogKHVubGlrZSBkb3dubG9hZCBjb3VudCB3aGljaCBjYW4gaW5jbHVkZSBD
SSBjb21wdXRlcnMpIHRoYXQgYXJlICpjb25zY2lvdXMqIGFib3V0IHRoZSBwcm9q
ZWN0J3Mgd29ydGguCgpJIHNjYW5uZWQgNTggcHJvamVjdHMgaW4gdG90YWwsIHdo
aWNoIG1heSBzZWVtIGxpa2UgYSBzbWFsbCBudW1iZXIsIGJ1dCB0aGlzIHdhcyBk
b25lIGZyb20gdGhlIG1vc3QgcG9wdWxhciB0byB0aGUgbGVhc3QuIFBvcHVsYXJp
dHkgaXMgdmVyeSBpbXBvcnRhbnQgdG8gc2NhbGUgdGhlIGRvbmF0aW9ucywgYW5k
IGl0IHR1cm5zIG91dCB0aGF0IHZlcnkgZmV3IHByb2plY3RzIGhhdmUgZW5vdWdo
IHBvcHVsYXJpdHkgdG8gYWNoaWV2ZSBmYWlyIGNvbXBlbnNhdGlvbi4gSW4gb3Ro
ZXIgd29yZHMsIGFtb25nIHRoZXNlIGZpZnR5IG1vc3QgcG9wdWxhciBwcm9qZWN0
cywgdGhlIG1ham9yaXR5IG9mIHRoZW0gYXJlIGJlbG93IHN1c3RhaW5hYmlsaXR5
IHRocmVzaG9sZHMuIEkgYmVsaWV2ZSB0aGF0IGlmIEkgd291bGQgY292ZXIgbW9y
ZSBkYXRhIHBvaW50cywgdGhvc2Ugd291bGQgYmUgbGlrZWx5IGxlc3MgcG9wdWxh
ciB0aGFuIHRoZXNlIG9uZXMuIFRoaXMgZGF0YSBzZXQgbWlnaHQgYmUgYmlhc2Vk
IHRvd2FyZHMgSmF2YVNjcmlwdCBwcm9qZWN0cyBvbiBPcGVuQ29sbGVjdGl2ZSwg
YnV0IHRoZSBjaG9pY2UgZm9yIHNhbXBsaW5nIE9wZW5Db2xsZWN0aXZlIGlzIGJl
Y2F1c2UgaXQgcHJvdmlkZXMgZWFzeSB0cmFuc3BhcmVudCBkYXRhIG9uIHRoZSBm
aW5hbmNlcyBvZiB2YXJpb3VzIHByb2plY3RzLiBJIHdhbnQgdG8gcmVtaW5kIHRo
ZSByZWFkZXIgb2YgdGhlIGV4aXN0ZW5jZSBvZiBvdGhlciBwb3B1bGFyIG9wZW4g
c291cmNlIHByb2plY3RzIHN1Y2ggYXMgTGludXgsIG5naW54LCBWaWRlb0xBTiwg
YW5kIG90aGVycy4gSXQgd291bGQgYmUgZ29vZCB0byBpbmNvcnBvcmF0ZSB0aGUg
ZmluYW5jaWFsIGRhdGEgZnJvbSB0aG9zZSBwcm9qZWN0cyBpbiB0aGlzIGRhdGEg
c2V0LgoKRnJvbSBHaXRIdWIgZGF0YSBhbmQgT3BlbkNvbGxlY3RpdmUsIEkgd2Fz
IGFibGUgdG8gY2FsY3VsYXRlIGhvdyBtdWNoIHllYXJseSByZXZlbnVlIGZvciBh
IHByb2plY3QgZ29lcyB0byBlYWNoICJmdWxsLXRpbWUgZXF1aXZhbGVudCIgY29u
dHJpYnV0b3IuIFRoaXMgaXMgZXNzZW50aWFsbHkgdGhlaXIgc2FsYXJ5LiBPciwg
c2FpZCBiZXR0ZXIsIHRoaXMgaXMgaG93IG11Y2ggdGhlaXIgc2FsYXJ5IHZpYSBk
b25hdGlvbnMgd291bGQgYmUgaWYgdGhleSB3ZXJlIHdvcmtpbmcgZXhjbHVzaXZl
bHkgb24gdGhlIG9wZW4gc291cmNlIHByb2plY3QsIHdpdGhvdXQgYW55IGNvbXBs
ZW1lbnRhcnkgaW5jb21lLiBJdCBpcyBsaWtlbHkgdGhhdCBhIHNpemFibGUgYW1v
dW50IG9mIGNyZWF0b3JzIGFuZCBtYWludGFpbmVycyB3b3JrIG9ubHkgcGFydC10
aW1lIG9uIHRoZWlyIHByb2plY3RzLiBUaG9zZSB0aGF0IHdvcmsgZnVsbC10aW1l
IHNvbWV0aW1lcyBjb21wbGVtZW50IHRoZWlyIGluY29tZSB3aXRoIHNhdmluZ3Mg
b3IgYnkgbGl2aW5nIGluIGEgY291bnRyeSB3aXRoIGxvd2VyIGNvc3RzIG9mIGxp
dmluZywgW29yIGJvdGggKFNpbmRyZSBTb3JodXMpXShodHRwczovL3R3aXR0ZXIu
Y29tL3NpbmRyZXNvcmh1cy9zdGF0dXMvOTAyOTU0NjYwMjg1MTI4NzA0KS4KClRo
ZW4sIGJhc2VkIG9uIHRoZSBbbGF0ZXN0IFN0YWNrT3ZlcmZsb3cgZGV2ZWxvcGVy
IHN1cnZleV0oaHR0cHM6Ly9pbnNpZ2h0cy5zdGFja292ZXJmbG93LmNvbS9zdXJ2
ZXkvMjAxOSN3b3JrLV8tc2FsYXJ5LWJ5LWRldmVsb3Blci10eXBlKSwgd2Uga25v
dyB0aGF0IHRoZSBsb3cgZW5kIG9mIGRldmVsb3BlciBzYWxhcmllcyBpcyBhcm91
bmQgJDQwaywgd2hpbGUgdGhlIGhpZ2ggZW5kIG9mIGRldmVsb3BlciBzYWxhcmll
cyBpcyBhYm92ZSAkMTAway4gVGhhdCByYW5nZSBkZXBpY3RzIHRoZSBpbmR1c3Ry
eSBzdGFuZGFyZCBmb3IgZGV2ZWxvcGVycywgZ2l2ZW4gdGhlaXIgc3RhdHVzIGFz
IGtub3dsZWRnZSB3b3JrZXJzLCBtYW55IG9mIHdoaWNoIGFyZSBsaXZpbmcgaW4g
T0VDRCBjb3VudHJpZXMuIFRoaXMgYWxsb3dlZCBtZSB0byBjbGFzc2lmeSB0aGUg
cmVzdWx0cyBpbnRvIGZvdXIgY2F0ZWdvcmllczoKCi0gQkxVRTogNi1maWd1cmUg
c2FsYXJ5Ci0gR1JFRU46IDUtZmlndXJlIHNhbGFyeSB3aXRoaW4gaW5kdXN0cnkg
c3RhbmRhcmRzCi0gT1JBTkdFOiA1LWZpZ3VyZSBzYWxhcnkgYmVsb3cgb3VyIGlu
ZHVzdHJ5IHN0YW5kYXJkcwotIFJFRDogc2FsYXJ5IGJlbG93IHRoZSBbb2ZmaWNp
YWwgVVMgcG92ZXJ0eSB0aHJlc2hvbGRdKGh0dHBzOi8vcG92ZXJ0eS51Y2Rhdmlz
LmVkdS9mYXEvd2hhdC1hcmUtcG92ZXJ0eS10aHJlc2hvbGRzLXRvZGF5KQoKVGhl
IGZpcnN0IGNoYXJ0LCBiZWxvdywgc2hvd3MgdGVhbSBzaXplIGFuZCAicHJpY2Ui
IGZvciBlYWNoIEdpdEh1YiBzdGFyLgoKWyFbT3BlbiBzb3VyY2UgcHJvamVjdHMs
IGluY29tZS1wZXItc3RhciB2ZXJzdXMgdGVhbSBzaXplXSgvaW1nL3BvdmVydHkt
dGVhbXNpemUucG5nKV0oL2ltZy9wb3ZlcnR5LXRlYW1zaXplLnBuZykKCioqTW9y
ZSB0aGFuIDUwJSBvZiBwcm9qZWN0cyBhcmUgcmVkKio6IHRoZXkgY2Fubm90IHN1
c3RhaW4gdGhlaXIgbWFpbnRhaW5lcnMgYWJvdmUgdGhlIHBvdmVydHkgbGluZS4g
MzElIG9mIHRoZSBwcm9qZWN0cyBhcmUgb3JhbmdlLCBjb25zaXN0aW5nIG9mIGRl
dmVsb3BlcnMgd2lsbGluZyB0byB3b3JrIGZvciBhIHNhbGFyeSB0aGF0IHdvdWxk
IGJlIGNvbnNpZGVyZWQgdW5hY2NlcHRhYmxlIGluIG91ciBpbmR1c3RyeS4gMTIl
IGFyZSBncmVlbiwgYW5kIG9ubHkgMyUgYXJlIGJsdWU6IFdlYnBhY2sgYW5kIFZ1
ZS5qcy4gSW5jb21lIHBlciBHaXRIdWIgc3RhciBpcyBpbXBvcnRhbnQ6IHN1c3Rh
aW5hYmxlIHByb2plY3RzIGdlbmVyYWxseSBoYXZlIGFib3ZlICQyL3N0YXIuIFRo
ZSBtZWRpYW4gdmFsdWUsIGhvd2V2ZXIsIGlzICQxLjIyL3N0YXIuIFRlYW0gc2l6
ZSBpcyBhbHNvIGltcG9ydGFudCBmb3Igc3VzdGFpbmFiaWxpdHk6IHRoZSBzbWFs
bGVyIHRoZSB0ZWFtLCB0aGUgbW9yZSBsaWtlbHkgaXQgY2FuIHN1c3RhaW4gaXRz
IG1haW50YWluZXJzLgoKVGhlIG1lZGlhbiBkb25hdGlvbiBwZXIgeWVhciBpcyAk
MjE3LCB3aGljaCBpcyBzdWJzdGFudGlhbCB3aGVuIHVuZGVyc3Rvb2Qgb24gYW4g
aW5kaXZpZHVhbCBsZXZlbCwgYnV0IGluIHJlYWxpdHkgaW5jbHVkZXMgc3BvbnNv
cnNoaXAgZnJvbSBjb21wYW5pZXMgdGhhdCBhcmUgZG9pbmcgdGhpcyBhbHNvIGZv
ciB0aGVpciBvd24gbWFya2V0aW5nIHB1cnBvc2VzLgoKVGhlIG5leHQgY2hhcnQg
c2hvd3MgaG93IHJldmVudWUgc2NhbGVzIHdpdGggcG9wdWxhcml0eS4KClshW09w
ZW4gc291cmNlIHByb2plY3RzLCB5ZWFybHkgcmV2ZW51ZSB2ZXJzdXMgR2l0SHVi
IHN0YXJzXSgvaW1nL3BvdmVydHktcG9wdWxhcml0eS5wbmcpXSgvaW1nL3BvdmVy
dHktcG9wdWxhcml0eS5wbmcpCgpZb3UgY2FuIGJyb3dzZSB0aGUgZGF0YSB5b3Vy
c2VsZiBieSBhY2Nlc3NpbmcgdGhpcyBbRGF0IGFyY2hpdmVdKGh0dHBzOi8vZGF0
cHJvamVjdC5vcmcvKSB3aXRoIGEgTGlicmVPZmZpY2UgQ2FsYyBzcHJlYWRzaGVl
dDoKCmBgYApkYXQ6Ly9iZjdiOTEyZmZmMWU2NGE1MmI4MDM0NDRkODcxNDMzYzU5
NDZjOTkwYWU1MWYyMDQ0MDU2YmY2Zjk2NTVlY2JmCmBgYAoKIyMgUG9wdWxhcml0
eSB2ZXJzdXMgZmFpcm5lc3MKCldoaWxlIHBvcHVsYXJpdHkgaXMga2V5IHRvIGdy
ZWVuIGFuZCBibHVlIHN1c3RhaW5hYmlsaXR5LCB0aGVyZSBhcmUgcG9wdWxhciBw
cm9kdWN0cyBpbiByZWQsIHN1Y2ggYXMgW1ByZXR0aWVyXShodHRwczovL2dpdGh1
Yi5jb20vcHJldHRpZXIvcHJldHRpZXIpLCBbQ3VybF0oaHR0cHM6Ly9naXRodWIu
Y29tL2N1cmwvY3VybCksIFtKZWt5bGxdKGh0dHBzOi8vZ2l0aHViLmNvbS9qZWt5
bGwvamVreWxsKSwgfn5bRWxlY3Ryb25dKGh0dHBzOi8vZ2l0aHViLmNvbS9lbGVj
dHJvbi9lbGVjdHJvbil+fiAodXBkYXRlOikgW0FWQV0oaHR0cHM6Ly9naXRodWIu
Y29tL2F2YWpzLykuIFRoaXMgZG9lc24ndCBtZWFuIHRoZSBwZW9wbGUgd29ya2lu
ZyBvbiB0aG9zZSBwcm9qZWN0cyBhcmUgcG9vciwgYmVjYXVzZSBpbiBzZXZlcmFs
IGNhc2VzIHRoZSBtYWludGFpbmVycyBoYXZlIGpvYnMgYXQgY29tcGFuaWVzIHRo
YXQgYWxsb3cgb3BlbiBzb3VyY2UgY29udHJpYnV0aW9ucy4gV2hhdCBpdCBkb2Vz
IG1lYW4sIGhvd2V2ZXIsIGlzIHRoYXQgdW5sZXNzIGNvbXBhbmllcyB0YWtlIGFu
IGFjdGl2ZSByb2xlIGluIHN1cHBvcnRpbmcgb3BlbiBzb3VyY2Ugd2l0aCBzaWdu
aWZpY2FudCBmdW5kaW5nLCB3aGF0J3MgbGVmdCBpcyBhIHNpdHVhdGlvbiB3aGVy
ZSBtb3N0IG9wZW4gc291cmNlIG1haW50YWluZXJzIGFyZSBzZXZlcmVseSB1bmRl
cmZ1bmRlZC4gT24gZG9uYXRpb25zIGFsb25lLCBvcGVuIHNvdXJjZSBpcyBzdXN0
YWluYWJsZSAoZmFpcmx5IHdpdGhpbiBpbmR1c3RyeSBzdGFuZGFyZHMpIGluIGEg
c3dlZXQgc3BvdDogd2hlbiBhIHBvcHVsYXIgcHJvamVjdCwgd2l0aCBhIHN1ZmZp
Y2llbnRseSBzbWFsbCB0ZWFtLCBrbm93cyBob3cgdG8gZ2F0aGVyIHNpZ25pZmlj
YW50IGZ1bmRpbmcgZnJvbSBhIGNyb3dkIG9mIGRvbmF0b3JzIG9yIHNwb25zb3Ig
b3JnYW5pemF0aW9ucy4gRmFpciBzdXN0YWluYWJpbGl0eSBpcyBzZW5zaXRpdmUg
dG8gdGhlc2UgcGFyYW1ldGVycy4KCkJlY2F1c2UgdmlzaWJpbGl0eSBpcyBmdW5k
YW1lbnRhbCBmb3IgZG9uYXRpb24tZHJpdmVuIHN1c3RhaW5hYmlsaXR5LCB0aGUg
ImludmlzaWJsZSBpbmZyYXN0cnVjdHVyZSIgcHJvamVjdHMgYXJlIG9mdGVuIGlu
IGEgbXVjaCB3b3JzZSBzaXR1YXRpb24gdGhhdCB0aGUgdmlzaWJsZSBvbmVzLiBG
b3IgaW5zdGFuY2UsIFtDb3JlLWpzXShodHRwczovL2dpdGh1Yi5jb20vemxvaXJv
Y2svY29yZS1qcykgaXMgbGVzcyBwb3B1bGFyIHRoYW4gW0JhYmVsXShodHRwczov
L2dpdGh1Yi5jb20vYmFiZWwvYmFiZWwpLCBhbHRob3VnaCBbaXQgaXMgYSBkZXBl
bmRlbmN5IGluIEJhYmVsXShodHRwczovL2JhYmVsanMuaW8vZG9jcy9lbi9uZXh0
L2JhYmVsLXBvbHlmaWxsLmh0bWwpLgoKPHRhYmxlIHN0eWxlPSJtYXJnaW46IDE1
cHggMDsiPgogIDx0aGVhZD4KICAgIDx0cj4KICAgICAgPHRoPkxpYnJhcnk8L3Ro
PgogICAgICA8dGg+VXNlZCBieTwvdGg+CiAgICAgIDx0aD5TdGFyczwvdGg+CiAg
ICAgIDx0aD4nU2FsYXJ5JzwvdGg+CiAgICA8L3RyPgogIDwvdGhlYWQ+CiAgPHRi
b2R5IHN0eWxlPSJ0ZXh0LWFsaWduOnJpZ2h0Ij4KICAgIDx0cj4KICAgICAgPHRk
IHN0eWxlPSJwYWRkaW5nOjVweDtib3JkZXI6MXB4IHNvbGlkICNjZGNkY2Q7Ij5C
YWJlbDwvdGQ+CiAgICAgIDx0ZCBzdHlsZT0icGFkZGluZzo1cHg7Ym9yZGVyOjFw
eCBzb2xpZCAjY2RjZGNkOyI+MzUwMjg0PC90ZD4KICAgICAgPHRkIHN0eWxlPSJw
YWRkaW5nOjVweDtib3JkZXI6MXB4IHNvbGlkICNjZGNkY2Q7Ij4zMzQxMtmtPC90
ZD4KICAgICAgPHRkIHN0eWxlPSJwYWRkaW5nOjVweDtib3JkZXI6MXB4IHNvbGlk
ICNjZGNkY2Q7Ij4kNzAwMTY8L3RkPgogICAgPC90cj4KICAgIDx0cj4KICAgICAg
PHRkIHN0eWxlPSJwYWRkaW5nOjVweDtib3JkZXI6MXB4IHNvbGlkICNjZGNkY2Q7
Ij5Db3JlLWpzPC90ZD4KICAgICAgPHRkIHN0eWxlPSJwYWRkaW5nOjVweDtib3Jk
ZXI6MXB4IHNvbGlkICNjZGNkY2Q7Ij4yNDQyNzEyPC90ZD4KICAgICAgPHRkIHN0
eWxlPSJwYWRkaW5nOjVweDtib3JkZXI6MXB4IHNvbGlkICNjZGNkY2Q7Ij44NzAy
2a08L3RkPgogICAgICA8dGQgc3R5bGU9InBhZGRpbmc6NXB4O2JvcmRlcjoxcHgg
c29saWQgI2NkY2RjZDsiPiQxNjIwNDwvdGQ+CiAgICA8L3RyPgogIDwvdGJvZHk+
CjwvdGFibGU+CgpTb21lIHByb3Bvc2VkIHNvbHV0aW9ucyBoYXZlIGJlZW4gdG8g
InRyaWNrbGUgZG93biIgZG9uYXRpb25zIGZyb20gdGhlIHdlbGwta25vd24gcHJv
amVjdHMgdG8gdGhlIGxlYXN0LCBndWlkZWQgYnkgdG9vbHMgc3VjaCBhcyBbQmFj
a1lvdXJTdGFja10oaHR0cHM6Ly9iYWNreW91cnN0YWNrLmNvbS8pIGFuZCBbR2l0
SHViJ3MgbmV3IENvbnRyaWJ1dG9yIG92ZXJ2aWV3XShodHRwczovL2dpdGh1Yi5i
bG9nLzIwMTktMDUtMjMtYW5ub3VuY2luZy1naXRodWItc3BvbnNvcnMtYS1uZXct
d2F5LXRvLWNvbnRyaWJ1dGUtdG8tb3Blbi1zb3VyY2UvI25hdGl2ZS10by15b3Vy
LWdpdGh1Yi13b3JrZmxvdykuIFRoaXMgd291bGQgd29yayBpZiB0aGUgd2VsbC1r
bm93biBwcm9qZWN0cyBoYWQgYSBodWdlIHN1cnBsdXMgdG8gc2hhcmUgd2l0aCB0
cmFuc2l0aXZlIGRlcGVuZGVuY2llcy4gVGhhdCBpcyBoYXJkbHkgcG9zc2libGUs
IG9ubHkgVnVlLmpzIGhhcyBlbm91Z2ggc3VycGx1cyB0byBzaGFyZSwgYW5kIGl0
IGNvdWxkIG9ubHkgZG8gdGhhdCB3aXRoIDMgb3IgNCBvdGhlciBkZXZlbG9wZXJz
LiBWdWUuanMgaXMgdGhlIGV4Y2VwdGlvbiwgb3RoZXIgcHJvamVjdHMgY2Fubm90
IGFmZm9yZCBzaGFyaW5nIHRoZWlyIGluY29tZSwgYmVjYXVzZSB0aGF0IHdvdWxk
IGNhdXNlIGV2ZXJ5b25lIGludm9sdmVkIHRvIHJlY2VpdmUgcG9vcmx5LgoKSW4g
dGhlIGNhc2Ugb2YgQmFiZWwgYW5kIENvcmUtanMsIHRoZXJlIGlzbid0IGEgbG90
IG9mIHN1cnBsdXMgdG8gc2hhcmUgZm9yd2FyZHMuIE9uZSBvZiBIZW5yeSBaaHUn
cyBwb2ludHMgaW4gaGlzIHRhbGsgd2FzIHByZWNpc2VseSB0aGF0IHRoZSBtb25l
eSByZWNlaXZlZCBpcyBhbHJlYWR5IHRvbyBsaW1pdGVkLiBJdCBtaWdodCBzZWVt
IGxpa2UgQmFiZWwgaXMgKnRoZSogdmlzaWJsZSBwcm9qZWN0IGluIHRoaXMgc2l0
dWF0aW9uLCBidXQgaXQgc3VycHJpc2VkIG1lIHRvIGhlYXIgZnJvbSBIZW5yeSB0
aGF0IG1hbnkgcGVvcGxlIGFyZSBub3QgYXdhcmUgb2YgQmFiZWwgYWx0aG91Z2gg
dGhleSB1c2UgaXQsIGJlY2F1c2UgdGhleSBtaWdodCBiZSB1c2luZyBpdCBhcyBh
IHRyYW5zaXRpdmUgZGVwZW5kZW5jeS4KCkZyb20gdGhlIG90aGVyIHNpZGUgb2Yg
dGhlIGNvaW4sIHRoZSBtYWludGFpbmVycyBvZiBsb3dlciBsZXZlbCBsaWJyYXJp
ZXMgcmVjb2duaXplIHRoZSBuZWVkIHRvIHBhcnRuZXIgd2l0aCBtb3JlIHZpc2li
bGUgcHJvamVjdHMgb3IgW2V2ZW4gbWVyZ2UgcHJvamVjdHNdKGh0dHBzOi8vdHdp
dHRlci5jb20vd29vb3JtL3N0YXR1cy8xMDYyNDA0OTk3MjQwMDEyODAwKSBpbiBv
cmRlciB0byBpbmNyZWFzZSBvdmVyYWxsIHZpc2liaWxpdHksIHBvcHVsYXJpdHks
IGFuZCB0aHVzIGZ1bmRpbmcuIFRoaXMgaXMgdGhlIGNhc2Ugb2YgVW5pZmllZCBi
eSBUaXR1cywgd2hpY2ggaXMgYSBwcm9qZWN0IHlvdSBtaWdodCBub3QgaGF2ZSBo
ZWFyZCBvZiwgYnV0IFVuaWZpZWQgYW5kIGl0cyBtYW55IHBhY2thZ2VzIGFyZSB1
c2VkIGluIFtNRFhdKGh0dHBzOi8vZ2l0aHViLmNvbS9tZHgtanMvbWR4L2Jsb2Iv
ZGVmZjM2YmViZmVkYjNhOWRlMGEwNTc1ZWU5YTFiNTViOWI4YWExOC9wYWNrYWdl
Lmpzb24jTDIwKSwgW0dhdHNieV0oaHR0cHM6Ly9naXRodWIuY29tL2dhdHNieWpz
L2dhdHNieS9ibG9iLzI1ZDRhNGRhYjY2ZTA0NzE3ZmIwOWRjNWVkYjFmN2I4NTZm
YzQxZmYvcGFja2FnZXMvZ2F0c2J5LXRyYW5zZm9ybWVyLXJlbWFyay9wYWNrYWdl
Lmpzb24jTDI2KSwgW1ByZXR0aWVyXShodHRwczovL2dpdGh1Yi5jb20vcHJldHRp
ZXIvcHJldHRpZXIvYmxvYi8yNGYxNjFkYjU2NWMxYTY2OTJlZTk4MTkxMTkzZDlj
ZjlmZjMxZDZmL3BhY2thZ2UuanNvbiNMNjYpLCBbU3Rvcnlib29rXShodHRwczov
L2dpdGh1Yi5jb20vc3Rvcnlib29ranMvc3Rvcnlib29rL2Jsb2IvZmVkMmZmYTVl
MjkxOTIyMGYwNTA4ZTU0MGIyZWFlODQ4NTIzZmVlNS9wYWNrYWdlLmpzb24jTDIx
NCkgYW5kIG1hbnkgb3RoZXJzLgoKSXQgaXMgYWxzbyBub3QgdHJ1ZSB0aGF0IHBv
cHVsYXIgcHJvamVjdHMgYXJlIGZpbmFuY2lhbGx5IGJldHRlciBvZmYgdGhhbiB0
aGVpciBsZXNzIHBvcHVsYXIgZGVwZW5kZW5jaWVzLiBQcmV0dGllciAoMzJrIHN0
YXJzKSB1c2VzIFVuaWZpZWQgKDFrIHN0YXJzKSBhcyBhIGRlcGVuZGVuY3ksIGJ1
dCBVbmlmaWVkIGhhcyBtb3JlIHllYXJseSByZXZlbnVlIHRoYW4gUHJldHRpZXIu
IEluIGZhY3QsIG1hbnkgb2YgdGhlIHBvcHVsYXIgcHJvamVjdHMgdGhhdCBkZXBl
bmQgb24gVW5pZmllZCBhcmUgcmVjZWl2aW5nIGxlc3MgZnVuZGluZyBwZXIgdGVh
bSBtZW1iZXIuIEJ1dCBVbmlmaWVkIGl0c2VsZiBpcyBzdGlsbCByZWNlaXZpbmcg
YmVsb3cgaW5kdXN0cnkgc3RhbmRhcmRzLCBub3QgaW4gYSBzaXR1YXRpb24gb2Yg
dHJpY2tsaW5nIGRvd24gKG9yIHVwPykgdGhhdCBmdW5kaW5nLgoKT3RoZXIgdGlt
ZXMsIGl0J3Mgbm90IGVhc3kgdG8gc2F5IHRoYXQgd2hlbiBhIHByb2plY3QgQSBp
cyB1c2luZyBwcm9qZWN0IEIsIGl0IHNob3VsZCBuZWNlc3NhcmlseSBkb25hdGUg
dG8gQiwgYmVjYXVzZSBpdCBtaWdodCBiZSB0aGF0IEIgYWxzbyB1c2VzIEEhIEZv
ciBpbnN0YW5jZSwgW0JhYmVsIGlzIGEgZGVwZW5kZW5jeSBpbiBQcmV0dGllcl0o
aHR0cHM6Ly9naXRodWIuY29tL3ByZXR0aWVyL3ByZXR0aWVyL2Jsb2IvMjRmMTYx
ZGI1NjVjMWE2NjkyZWU5ODE5MTE5M2Q5Y2Y5ZmYzMWQ2Zi9wYWNrYWdlLmpzb24j
TDE5KSwgYW5kIFtQcmV0dGllciBpcyBhIGRlcGVuZGVuY3kgaW4gQmFiZWxdKGh0
dHBzOi8vZ2l0aHViLmNvbS9iYWJlbC9iYWJlbC9ibG9iL2Y5MmMyYWU4MzBkYmIz
MjAxM2EzNmZhNzRmYWNkMmVmOTViOTk0N2QvcGFja2FnZS5qc29uI0w1OSkuIFBy
b2JhYmx5IG1hbnkgb2YgdGhlIHByb2plY3RzIGNvdmVyZWQgaW4gdGhpcyBzdHVk
eSBoYXZlIGEgY29tcGxleCB3ZWIgb2YgZGVwZW5kZW5jaWVzICpiZXR3ZWVuKiBl
YWNoIG90aGVyLCB0aGF0IGl0IGJlY29tZXMgZGlmZmljdWx0IHRvIHNheSBob3cg
c2hvdWxkIG1vbmV5IGZsb3cgd2l0aGluIHRoZXNlIHByb2plY3RzLgoKIyMgRXhw
bG9pdGF0aW9uCgpUaGUgdG90YWwgYW1vdW50IG9mIG1vbmV5IGJlaW5nIHB1dCBp
bnRvIG9wZW4gc291cmNlIGlzIG5vdCBlbm91Z2ggZm9yIGFsbCB0aGUgbWFpbnRh
aW5lcnMuIElmIHdlIGFkZCB1cCBhbGwgb2YgdGhlIHllYXJseSByZXZlbnVlIGZy
b20gdGhvc2UgcHJvamVjdHMgaW4gdGhpcyBkYXRhIHNldCwgaXQncyAkMi41IG1p
bGxpb24uIFRoZSBtZWRpYW4gc2FsYXJ5IGlzIGFwcHJveGltYXRlbHkgJDlrLCB3
aGljaCBpcyBiZWxvdyB0aGUgcG92ZXJ0eSBsaW5lLiBJZiBzcGxpdCB1cCB0aGF0
IG1vbmV5IGV2ZW5seSwgdGhhdCdzIHJvdWdobHkgJDIyaywgd2hpY2ggaXMgc3Rp
bGwgYmVsb3cgaW5kdXN0cnkgc3RhbmRhcmRzLgoKVGhlIGNvcmUgcHJvYmxlbSBp
cyBub3QgdGhhdCBvcGVuIHNvdXJjZSBwcm9qZWN0cyBhcmUgbm90IHNoYXJpbmcg
dGhlIG1vbmV5IHJlY2VpdmVkLiBUaGUgcHJvYmxlbSBpcyB0aGF0LCBpbiB0b3Rh
bCBudW1iZXJzLCBvcGVuIHNvdXJjZSBpcyBub3QgZ2V0dGluZyBlbm91Z2ggbW9u
ZXkuICQyLjUgbWlsbGlvbiBpcyBub3QgZW5vdWdoLiBUbyBwdXQgdGhpcyBudW1i
ZXIgaW50byBwZXJzcGVjdGl2ZSwgc3RhcnR1cHMgZ2V0IHR5cGljYWxseSBtdWNo
IG1vcmUgdGhhbiB0aGF0LgoKW1RpZGVsaWZ0IGhhcyByZWNlaXZlZCAkNDAgbWls
bGlvbl0oaHR0cHM6Ly93d3cuY3J1bmNoYmFzZS5jb20vb3JnYW5pemF0aW9uL3Rp
ZGVsaWZ0KSBpbiBmdW5kaW5nLCB0byAiaGVscCBvcGVuIHNvdXJjZSBjcmVhdG9y
cyBhbmQgbWFpbnRhaW5lcnMgZ2V0IGZhaXJseSBjb21wZW5zYXRlZCBmb3IgdGhl
aXIgd29yayIgWyhxdW90ZSldKGh0dHBzOi8vdGlkZWxpZnQuY29tL2RvY3MvbGlm
dGluZy9wYXlpbmcpLiBUaGV5IGhhdmUgYSBbdGVhbSBvZiAyNyBwZW9wbGVdKGh0
dHBzOi8vdGlkZWxpZnQuY29tL2Fib3V0KSwgc29tZSBvZiB0aGVtIGV4LWVtcGxv
eWVlcyBmcm9tIGxhcmdlIGNvbXBhbmllcyAoc3VjaCBhcyBHb29nbGUgYW5kIEdp
dEh1YikuIFRoZXkgcHJvYmFibHkgZG9uJ3QgcmVjZWl2ZSB0aGUgbG93ZXIgdGll
ciBvZiBzYWxhcmllcy4gWWV0LCBtYW55IG9mIHRoZSBbb3BlbiBzb3VyY2UgcHJv
amVjdHMgdGhleSBzaG93Y2FzZV0oaHR0cHM6Ly90aWRlbGlmdC5jb20vc3Vic2Ny
aXB0aW9uKSBvbiB0aGVpciB3ZWJzaXRlIGFyZSBiZWxvdyBwb3ZlcnR5IGxpbmUg
cmVnYXJkaW5nIGluY29tZSBmcm9tIGRvbmF0aW9ucy4gV2UgYWN0dWFsbHkgZG8g
bm90IGtub3cgaG93IG11Y2ggVGlkZWxpZnQgaXMgZ2l2aW5nIHRvIHRoZSBtYWlu
dGFpbmVycyBvZiB0aGVzZSBwcm9qZWN0cywgYnV0IHRoZWlyIFtzdWJzY3JpcHRp
b24gcHJpY2luZ10oaHR0cHM6Ly90aWRlbGlmdC5jb20vc3Vic2NyaXB0aW9uL3By
aWNpbmcpIGlzIHZlcnkgaGlnaC4gT3BhcXVlbmVzcyBvZiBwcmljZSBhbmQgY29z
dCBzdHJ1Y3R1cmUgaGFzIGhpc3RvcmljYWxseSBoZWxwZWQgY29tcGFuaWVzIGhp
ZGUgaW5lcXVhbGl0eS4KCkdpdEh1YiB3YXMgW2JvdWdodCBieSBNaWNyb3NvZnQg
Zm9yICQ3LjUgYmlsbGlvbl0oaHR0cHM6Ly92ZW50dXJlYmVhdC5jb20vMjAxOC8w
Ni8wNC9taWNyb3NvZnQtY29uZmlybXMtaXQtd2lsbC1hY3F1aXJlLWdpdGh1Yi1m
b3ItNy01LWJpbGxpb24vKS4gVG8gbWFrZSB0aGF0IHF1YW50aXR5IGVhc2llciB0
byBncm9rLCB0aGUgYW1vdW50IG9mIG1vbmV5IE1pY3Jvc29mdCBwYWlkIHRvIGFj
cXVpcmUgR2l0SHViIOKAkyB0aGUgY29tcGFueSDigJMgaXMgbW9yZSB0aGFuICoq
MzAwMHgqKiB3aGF0IHRoZSBvcGVuIHNvdXJjZSBjb21tdW5pdHkgaXMgZ2V0dGlu
ZyB5ZWFybHkuIEluIG90aGVyIHdvcmRzLCBpZiB0aGUgb3BlbiBzb3VyY2UgY29t
bXVuaXR5IHNhdmVkIHVwIGV2ZXJ5IHBlbm55IG9mIHRoZSBtb25leSB0aGV5IGV2
ZXIgcmVjZWl2ZWQsIGFmdGVyIGEgY291cGxlIHRob3VzYW5kIHllYXJzIHRoZXkg
Y291bGQgcGVyaGFwcyBoYXZlIGVub3VnaCBtb25leSB0byBidXkgR2l0SHViIGpv
aW50bHkuIEFuZCBub3cgR2l0SHViIGl0c2VsZiBoYXMgaXRzIG93biBbT3BlbiBT
b3VyY2UgRWNvbm9teSB0ZWFtXShodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRj
aD92PW40N3JDYTlkeGY4KSAoaG93IGJpZyBpcyB0aGlzIHRlYW0gYW5kIHdoYXQg
YXJlIHRoZWlyIHNhbGFyaWVzPyksIGJ1dCB0aGUgbmV3IEdpdEh1YiBzcG9uc29y
cyBmZWF0dXJlIGlzIGZhciBsZXNzIHRyYW5zcGFyZW50IHRoYW4gT3BlbkNvbGxl
Y3RpdmUuIEFnYWluc3QgR2l0SHViJ3MgdHJhZGl0aW9uYWwgY3VsdHVyZSBvZiBv
cGVuIGRhdGEgKHN1Y2ggYXMgdGhlIGNvbW1pdHMgY2FsZW5kYXIgb3IgdGhlIGNv
bnRyaWJ1dG9ycyBjaGFydCksIHdoZW4gaXQgY29tZXMgdG8gZG9uYXRpb25zLCBh
IHVzZXIgY2Fubm90IGtub3cgaG93IG11Y2ggZWFjaCBvcGVuIHNvdXJjZSBtYWlu
dGFpbmVyIGlzIGdldHRpbmcuIEl0J3Mgb3BhcXVlLgoKSWYgTWljcm9zb2Z0IEdp
dEh1YiBpcyBzZXJpb3VzIGFib3V0IGhlbHBpbmcgZnVuZCBvcGVuIHNvdXJjZSwg
dGhleSBzaG91bGQgcHV0IHRoZWlyIG1vbmV5IHdoZXJlIHRoZWlyIG1vdXRoIGlz
OiBkb25hdGUgYXQgbGVhc3QgJDEgYmlsbGlvbiB0byBvcGVuIHNvdXJjZSBwcm9q
ZWN0cy4gRXZlbiBhIG1lcmUgJDEuNSBtaWxsaW9uIHBlciB5ZWFyIHdvdWxkIGJl
IGVub3VnaCB0byBtYWtlIGFsbCB0aGUgcHJvamVjdHMgaW4gdGhpcyBzdHVkeSBi
ZWNvbWUgZ3JlZW4uIFRoZSBbTWF0Y2hpbmcgRnVuZF0oaHR0cHM6Ly9oZWxwLmdp
dGh1Yi5jb20vZW4vYXJ0aWNsZXMvYWJvdXQtZ2l0aHViLXNwb25zb3JzI2Fib3V0
LXRoZS1naXRodWItc3BvbnNvcnMtbWF0Y2hpbmctZnVuZCkgaW4gR2l0SHViIFNw
b25zb3JzIGlzIG5vdCBlbm91Z2gsIGl0IGdpdmVzIGEgbWFpbnRhaW5lciBhdCBt
b3N0IGp1c3QgJDVrIGluIGEgeWVhciwgd2hpY2ggaXMgbm90IHN1ZmZpY2llbnQg
dG8gcmFpc2UgdGhlIG1haW50YWluZXIgZnJvbSB0aGUgcG92ZXJ0eSB0aHJlc2hv
bGQgdXAgdG8gaW5kdXN0cnkgc3RhbmRhcmQuCgpXZSBub3cgaGF2ZSBkYXRhIHRv
IHNheSB0aGF0IG9wZW4gc291cmNlIGNyZWF0b3JzIGFuZCBtYWludGFpbmVycyBh
cmUgcmVjZWl2aW5nIGxvdyBpbmNvbWUsIGFuZCB3ZSBoYXZlIGRhdGEgdG8gc2F5
IHRoYXQgY29tcGFuaWVzICJoZWxwaW5nIiBvcGVuIHNvdXJjZSBhcmUgcmVjZWl2
aW5nIG1pbGxpb25zLCBhbmQgbW9zdCBsaWtlbHkgdG9wIHNhbGFyaWVzLiBPdGhl
ciBtaWxsaW9uYWlyZSBhbmQgYmlsbGlvbmFpcmUgY29tcGFuaWVzIGFyZSBtYWtp
bmcgcHJvZml0cyBieSBjb21iaW5pbmcgb3BlbiBzb3VyY2UgbGlicmFyaWVzIGFu
ZCBjb21wb25lbnRzIHRvIGJ1aWxkIHByb3ByaWV0YXJ5IHNvZnR3YXJlLiBJIHVu
ZGVyc3RhbmQgW0RISCdzIHN0YW5jZSBvbiAqJ1RoZXJlIGlzIG5vIHRyYWdlZHkn
Kl0oaHR0cHM6Ly95b3V0dS5iZS9WQndXYkZwa2x0Zz9saXN0PVBMRTd0UVVkUktj
eWFPcTNIbFJtOWhfUV9XaFdLcW01eGMmdD0xMzYyKSBpbiBvcGVuIHNvdXJjZSBz
dXN0YWluYWJpbGl0eSwgYW5kIGluIGZhY3Qgd2hlbiBJIHdhdGNoZWQgaGlzIHRh
bGsgSSB3YXMgaW5jbGluZWQgdG8gYWdyZWUuIEhvd2V2ZXIsIHRoZSByZWNlbnQg
ZGF0YSBJIGNvbXBpbGVkIOKAkyBvdXQgb2YgY3VyaW9zaXR5IOKAkyBzaG93ZWQg
bWUgdGhlIGRlZmF1bHQgcmVhbGl0eSBvZiBvcGVuIHNvdXJjZSBmaW5hbmNlcywg
aW5kaWNhdGluZyBhIHNldmVyZSBpbWJhbGFuY2UgYmV0d2VlbiB3b3JrIHF1YWxp
dHkgYW5kIGNvbXBlbnNhdGlvbi4gRnVsbC10aW1lIG1haW50YWluZXJzIGFyZSB0
ZWNobmljYWxseSB0YWxlbnRlZCBwZW9wbGUgcmVzcG9uc2libGUgZm9yIGlzc3Vl
IG1hbmFnZW1lbnQsIHNlY3VyaXR5LCBuYXZpZ2F0aW5nIHRveGljIGNvbXBsYWlu
dHMsIHdoaWxlIG9mdGVuIHJlY2VpdmluZyBiZWxvdyB0aGUgaW5kdXN0cnkgc3Rh
bmRhcmRzLgoKVGhlIHN0cnVnZ2xlIG9mIG9wZW4gc291cmNlIHN1c3RhaW5hYmls
aXR5IGlzIHRoZSBtaWxsZW5uaXVtLW9sZCBzdHJ1Z2dsZSBvZiBodW1hbml0eSB0
byBmcmVlIGl0c2VsZiBmcm9tIHNsYXZlcnksIGNvbG9uaXphdGlvbiwgYW5kIGV4
cGxvaXRhdGlvbi4gVGhpcyBpcyBub3QgdGhlIGZpcnN0IHRpbWUgaGFyZC13b3Jr
aW5nIGhvbmVzdCBwZW9wbGUgYXJlIGdpdmluZyB0aGVpciBhbGwsIGZvciB1bmZh
aXIgY29tcGVuc2F0aW9uLgoKVGhpcyBpcyB0aGVyZWZvcmUgbm90IGEgbmV3IHBy
b2JsZW0sIGFuZCBpdCBkb2VzIG5vdCByZXF1aXJlIGNvbXBsaWNhdGVkIG5ldyBz
b2x1dGlvbnMuIEl0IGlzIHNpbXBseSBhIHZlcnNpb24gb2YgaW5qdXN0aWNlLiBU
byBmaXggaXQgaXMgbm90IGEgbWF0dGVyIG9mIHJlY2VpdmluZyBjb21wYXNzaW9u
IGFuZCBtb3JhbCBiZWhhdmlvciBmcm9tIGNvbXBhbmllcywgZm9yIGNvbXBhbmll
cyBhcmUgZnVuZGFtZW50YWxseSBidWlsdCB0byBkbyBzb21ldGhpbmcgZWxzZSB0
aGFuIHRoYXQuIENvbXBhbmllcyBzaW1wbHkgZm9sbG93IHNvbWUgYmFzaWMgZmlu
YW5jaWFsIHJ1bGVzIG9mIHNvY2lldHkgd2hpbGUgdHJ5aW5nIHRvIG9wdGltaXpl
IGZvciBwcm9maXQgYW5kL29yIGRvbWluYXRpb24uCgpPcGVuIHNvdXJjZSBpbmZy
YXN0cnVjdHVyZSBpcyBhIGNvbW1vbnMsIG11Y2ggbGlrZSBvdXIgZWNvbG9naWNh
bCBzeXN0ZW1zLiBCZWNhdXNlIG91ciBzb2NpZXRpZXMgZGlkIG5vdCDqaGF2ZSBy
dWxlcyB0byBwcmV2ZW50IHRoZSBlY29sb2dpY2FsIHN5c3RlbXMgZnJvbSBiZWlu
ZyBleHBsb2l0ZWQsIGNvbXBhbmllcyBoYXZlIFtlbmdhZ2VkIGluIGluZHVzdHJp
YWxpemVkIHJlc291cmNlIGV4dHJhY3Rpb25dKGh0dHBzOi8vb3Vyd29ybGRpbmRh
dGEub3JnL2Zvc3NpbC1mdWVscykuIE92ZXIgbWFueSBkZWNhZGVzIHRoaXMgaXMg
W2RlcGxldGluZyB0aGUgZW52aXJvbm1lbnRdKGh0dHBzOi8vb3Vyd29ybGRpbmRh
dGEub3JnL2ZvcmVzdHMpLCBhbmQgbm93IHdlIGFyZSBmYWNpbmcgYSBbY2xpbWF0
ZSBjcmlzaXNdKGh0dHBzOi8vd3d3LnRoZWd1YXJkaWFuLmNvbS9lbnZpcm9ubWVu
dC8yMDE5L21heS8xNy93aHktdGhlLWd1YXJkaWFuLWlzLWNoYW5naW5nLXRoZS1s
YW5ndWFnZS1pdC11c2VzLWFib3V0LXRoZS1lbnZpcm9ubWVudCksIFtwcm92ZW5d
KGh0dHBzOi8vY2xpbWF0ZS5uYXNhLmdvdi8pIFt0aHJvdWdoIHNjaWVudGlmaWNh
bCBjb25zZW5zdXNdKGh0dHBzOi8vYXJjaGl2ZS5pcGNjLmNoL3BkZi9hc3Nlc3Nt
ZW50LXJlcG9ydC9hcjUvc3lyL1NZUl9BUjVfRklOQUxfZnVsbF93Y292ZXIucGRm
KSB0byBiZSBhIFtzdWJzdGFudGlhbCB0aHJlYXQgdG8gaHVtYW5pdHldKGh0dHBz
Oi8vbmV3cy51bi5vcmcvZW4vc3RvcnkvMjAxOC8wNS8xMDA5NzgyKSBhbmQgW2Fs
bCBsaWZlIG9uIHRoZSBwbGFuZXRdKGh0dHBzOi8vd3d3LmlwYmVzLm5ldC9uZXdz
L01lZGlhLVJlbGVhc2UtR2xvYmFsLUFzc2Vzc21lbnQpLiBPcGVuIHNvdXJjZSBt
aXNhcHByb3ByaWF0aW9uIGlzIHNpbXBseSBhIHNtYWxsIHZlcnNpb24gb2YgdGhh
dCwgd2l0aCBsZXNzIGRyYW1hdGljIGNvbnNlcXVlbmNlcy4KCklmIHlvdSB3YW50
IHRvIGhlbHAgb3BlbiBzb3VyY2UgYmVjb21lIHN1c3RhaW5hYmxlLCByaXNlIHVw
IGFuZCBoZWxwIGh1bWFuaXR5IHdyaXRlIG5ldyBydWxlcyBmb3Igc29jaWV0eSwg
dGhhdCBrZWVwIHBvd2VyIGFuZCBjYXBpdGFsaXN0IHRoaXJzdCBhY2NvdW50YWJs
ZSBmb3IgYWJ1c+llLiBJZiB5b3UgYXJlIHdvbmRlcmluZyB3aGF0IHRoYXQgbG9v
a3MgbGlrZSwgaGVyZSBhcmUgc29tZSBpbml0aWFsIHN1Z2dlc3Rpb25zIG9mIGNv
bmNyZXRlIGFjdGlvbnMgdG8gdGFrZToKCi0gT25seSBhY2NlcHQgam9icyBhdCBj
b21wYW5pZXMgdGhhdCBkb25hdGUgYSBzaWduaWZpY2FudCBwb3J0aW9uIG9mIHRo
ZWlyIHByb2ZpdCAoYXQgbGVhc3QgMCw1JSkgdG8gb3BlbiBzb3VyY2UsIG9yIGNv
bXBhbmllcyB3aGljaCBkb24ndCBmdW5kYW1lbnRhbGx5IGRlcGVuZCBvbiBvcGVu
IHNvdXJjZSBmb3IgdGhlaXIgcHJvZHVjdHMKLSBEb25hdGUgdG8gb3BlbiBzb3Vy
Y2UgaWYgeW91IGhhdmUgYSBkZWNlbnQgZW5vdWdoIHNhbGFyeQotIERvbid0IGRp
c2NhcmQgdW5pb25pemluZyAoSSBhbSB3cml0aW5nIHRoaXMgaW4gRmlubGFuZCwg
d2hlcmUgNjUlIG9mIGFsbCB3b3JrZXJzIGFyZSBpbiB1bmlvbnMpCi0gRG9uJ3Qg
ZGlzY2FyZCBbYWx0ZXJuYXRpdmUgbGljZW5zZXNdKGh0dHBzOi8vbGljZeduc2V6
ZXJvLmNvbS8pIGZvciBuZXcgcHJvamVjdHMKLSBQcmVzc3VyZSBNaWNyb3NvZnQg
dG8gZG9uYXRlIG1pbGxpb25zIHRvIG9wZW4gc291cmNlIHByb2plY3RzCi0gRXhw
b3NlIHRoZSB0cnV0aCBvbiBob3cgY29tcGFuaeVlcyBhcmUgYmVoYXZpbmcgYnkg
cHVibGlzaGluZyBkYeR0YSBzdHVkaWVzIGxpa2Ug43RoaXMgb25l4AoAwsBcBAAB
CgAQBQJdA6aoCRCe3iPqfopIkAAAWTsIAIlAocHtx+RmCVrdHtBFVSvCHuRP0PeQ
5xG76O9oW4wUo9scC693B0zvLcUBwllgFmjl7pyGlw55QN/Fvo2T+t6jj/qFn/t2
3tOscPkeMteLanGwSZv9BftMs+S/DP4IYnz/V4CTdlqDCUOqhLWBWYoEDNK51WaU
P9B5XCNEryuXk2/mbQAS9cbyAI1DaBB0CK1xNkb0gWkS5nJsSrH1VVAgEyae1HiW
drYNiacCyAiBb4/Q6EbmOfxpAx1Mp8p8qgt0J0mk6I/lHykFn/fiL4ZzyYTUMkAU
yFDjEeLD5lm7YxefZsCnCHOkKUj5i0tb0sU5T+PlP72iPf8RoJlbezc=
=VPLV
-----END PGP MESSAGE-----
