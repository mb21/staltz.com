-----BEGIN PGP MESSAGE-----
Comment: https://keybase.io/download
Version: Keybase Go 4.0.0 (linux)

xA0DAAoBnt4j6n6KSJABy+F0AOIAAAAA7i0tLQpsYXlvdXQ6IHBvc3QKdGl0bGU6
ICJTb2Z0d2FyZSBiZWxvdyB0aGUgcG92ZXJ0eSBsaW5lIgp0YWdzOiBbYmxvZ10K
LS0tCgpNb3N0IHBlb3BsZSBiZWxpZXZlIHRoYXQgW29wZW4gc291cmNlIHN1c3Rh
aW5hYmlsaXR5IGlzIGEgZGlmZmljdWx0IHByb2JsZW1dKGh0dHBzOi8vd3d3LmZv
cmRmb3VuZGF0aW9uLm9yZy9hYm91dC9saWJyYXJ5L3JlcG9ydHMtYW5kLXN0dWRp
ZXMvcm9hZHMtYW5kLWJyaWRnZXMtdGhlLXVuc2Vlbi1sYWJvci1iZWhpbmQtb3Vy
LWRpZ2l0YWwtaW5mcmFzdHJ1Y3R1cmUvKSB0byBzb2x2ZS4gQXMgYW4gb3BlbiBz
b3VyY2UgZGV2ZWxvcGVyIG15c2VsZiwgbXkgb3duIHBlcnNwZWN0aXZlIHRvIHRo
aXMgcHJvYmxlbSB3YXMgbW9yZSBvcHRpbWlzdGljOiBJIGJlbGlldmUgaW4gdGhl
IGRvbmF0aW9uIG1vZGVsLCBmb3IgaXRzIHNpbXBsaWNpdHkgYW5kIHBvc3NpYmls
aXR5IHRvIHNjYWxlLgoKSG93ZXZlciwgSSByZWNlbnRseSBtZXQgb3RoZXIgb3Bl
biBzb3VyY2UgZGV2ZWxvcGVycyB0aGF0IG1ha2UgYSBsaXZpbmcgZnJvbSBkb25h
dGlvbnMsIGFuZCB0aGV5IGhlbHBlZCB3aWRlbiBteSBwZXJzcGVjdGl2ZS4gQXQg
QW1zdGVyZGFtLmpzLCBJIGhlYXJkIFtIZW5yeSBaaHUgc3BlYWsgYWJvdXQgc3Vz
dGFpbmFiaWxpdHldKGh0dHBzOi8vZ2l0aHViLmNvbS9oem9vL29wZW4tc291cmNl
LWNoYXJpdHktb3ItYnVzaW5lc3MvKSBpbiB0aGUgQmFiZWwgcHJvamVjdCBhbmQg
YmV5b25kLCBhbmQgaXQgd2FzIGEgcHJldHR5IGRpcmUgcGljdHVyZS4gTGF0ZXIs
IG92ZXIgYnJlYWtmYXN0LCBIZW5yeSBhbmQgSSBoYWQgYSBkZWVwZXIgY29udmVy
c2F0aW9uIG9uIHRoaXMgdG9waWMuIEluIEFtc3RlcmRhbSBJIGFsc28gbWV0IHVw
IHdpdGggW1RpdHVzXShodHRwczovL2dpdGh1Yi5jb20vd29vb3JtKSwgd2hvIG1h
aW50YWlucyB0aGUgW1VuaWZpZWRdKGh0dHBzOi8vdW5pZmllZC5qcy5vcmcvKSBw
cm9qZWN0IGZ1bGwtdGltZS4gTWVldGluZyB3aXRoIHRoZXNlIHBlb3BsZSBJIGNv
bmZpcm1lZCBteSBiZWxpZWYgaW4gdGhlIGRvbmF0aW9uIG1vZGVsIGZvciBzdXN0
YWluYWJpbGl0eS4gSXQgd29ya3MuIEJ1dCwgd2hhdCByZWFsbHkgc3Rvb2Qgb3V0
IHRvIG1lIHdhcyB0aGUgcXVlc3Rpb246IGlzIGl0IGZhaXI/CgpJIGRlY2lkZWQg
dG8gY29sbGVjdCBkYXRhIGZyb20gT3BlbkNvbGxlY3RpdmUgYW5kIEdpdEh1Yiwg
YW5kIHRha2UgYSBtb3JlIHNjaWVudGlmaWMgc2FtcGxlIG9mIHRoZSBzaXR1YXRp
b24uIFRoZSByZXN1bHRzIEkgZm91bmQgd2VyZSBzaG9ja2luZzogdGhlcmUgd2Vy
ZSB0d28gY2xlYXJseSBzdXN0YWluYWJsZSBvcGVuIHNvdXJjZSBwcm9qZWN0cywg
YnV0IHRoZSBtYWpvcml0eSAobW9yZSB0aGFuIDgwJSkgb2YgcHJvamVjdHMgdGhh
dCB3ZSB1c3VhbGx5IGNvbnNpZGVyIHN1c3RhaW5hYmxlIGFyZSBhY3R1YWxseSBy
ZWNlaXZpbmcgaW5jb21lIGJlbG93IGluZHVzdHJ5IHN0YW5kYXJkcyBvciBldmVu
IGJlbG93IHRoZSBwb3ZlcnR5IHRocmVzaG9sZC4KCiMjIFdoYXQgdGhlIGRhdGEg
c2F5cwoKSSBwaWNrZWQgW3BvcHVsYXIgb3BlbiBzb3VyY2UgcHJvamVjdHNdKGh0
dHBzOi8vb3BlbmNvbGxlY3RpdmUuY29tL2Rpc2NvdmVyKSBmcm9tIE9wZW5Db2xs
ZWN0aXZlLCBhbmQgc2VsZWN0ZWQgdGhlIHllYXJseSBpbmNvbWUgZGF0YSBmcm9t
IGVhY2guIFRoZW4gSSBsb29rZWQgdXAgdGhlaXIgR2l0SHViIHJlcG9zaXRvcmll
cywgdG8gbWVhc3VyZSB0aGUgY291bnQgb2Ygc3RhcnMsIGFuZCBob3cgbWFueSAi
ZnVsbC10aW1lIiBjb250cmlidXRvcnMgdGhleSBoYXZlIGhhZCBpbiB0aGUgcGFz
dCAxMiBtb250aHMuIFNvbWV0aW1lcyBJIGFsc28gbG9va2VkIHVwIHRoZSBQYXRy
ZW9uIHBhZ2VzIGZvciB0aG9zZSBmZXcgbWFpbnRhaW5lcnMgdGhhdCBoYWQgb25l
LCBhbmQgYWRkZWQgdGhhdCBkYXRhIHRvIHRoZSB5ZWFybHkgaW5jb21lIGZvciB0
aGUgcHJvamVjdC4gRm9yIGluc3RhbmNlLCBpdCBpcyBvYnZpb3VzIHRoYXQgRXZh
biBZb3UgZ2V0cyBtb25leSBvbiBbUGF0cmVvbiB0byB3b3JrIG9uIFZ1ZS5qc10o
aHR0cHM6Ly93d3cucGF0cmVvbi5jb20vZXZhbnlvdSkuIFRoZXNlIGRhdGEgcG9p
bnRzIGFsbG93ZWQgbWUgdG8gbWVhc3VyZTogcHJvamVjdCAqKnBvcHVsYXJpdHkq
KiAoYSBwcm9wb3J0aW9uYWwgaW5kaWNhdG9yIG9mIHRoZSBudW1iZXIgb2YgdXNl
cnMpLCAqKnllYXJseSByZXZlbnVlKiogZm9yIHRoZSB3aG9sZSB0ZWFtLCBhbmQg
Kip0ZWFtIHNpemUqKi4KCkl0IGlzIGRpZmZpY3VsdCB0byBkZXJpdmUgZXhhY3Rs
eSBob3cgbWFueSB1c2VycyB0aGVyZSBhcmUgZm9yIGVhY2ggcHJvamVjdCwgc3Bl
Y2lhbGx5IGJlY2F1c2UgdGhleSBtYXkgYmUgdHJhbnNpdGl2ZSB1c2Vycywgbm90
IGF3YXJlIHRoYXQgdGhleSBhcmUgdXNpbmcgdGhlIHByb2plY3QuIFRoaXMgaXMg
d2h5IEkgd2VudCB3aXRoIEdpdEh1YiBzdGFycyBhcyBhIGdvb2QgZW5vdWdoIG1l
YXN1cmVtZW50IGZvciB1c2VyIGNvdW50LCBiZWNhdXNlIGl0IGNvdW50cyAqcGVy
c29ucyogKHVubGlrZSBkb3dubG9hZCBjb3VudCB3aGljaCBjYW4gaW5jbHVkZSBD
SSBjb21wdXRlcnMpIHRoYXQgYXJlICpjb25zY2lvdXMqIGFib3V0IHRoZSBwcm9q
ZWN0J3Mgd29ydGguCgpJIHNjYW5uZWQgNTggcHJvamVjdHMgaW4gdG90YWwsIHdo
aWNoIG1heSBzZWVtIGxpa2UgYSBzbWFsbCBudW1iZXIsIGJ1dCB0aGlzIHdhcyBk
b25lIGZyb20gdGhlIG1vc3QgcG9wdWxhciB0byB0aGUgbGVhc3QuIFBvcHVsYXJp
dHkgaXMgdmVyeSBpbXBvcnRhbnQgdG8gc2NhbGUgdGhlIGRvbmF0aW9ucywgYW5k
IGl0IHR1cm5zIG91dCB0aGF0IHZlcnkgZmV3IHByb2plY3RzIGhhdmUgZW5vdWdo
IHBvcHVsYXJpdHkgdG8gYWNoaWV2ZSBmYWlyIGNvbXBlbnNhdGlvbi4gSW4gb3Ro
ZXIgd29yZHMsIGFtb25nIHRoZXNlIGZpZnR5IG1vc3QgcG9wdWxhciBwcm9qZWN0
cywgdGhlIG1ham9yaXR5IG9mIHRoZW0gYXJlIGJlbG93IHN1c3RhaW5hYmlsaXR5
IHRocmVzaG9sZHMuIEkgYmVsaWV2ZSB0aGF0IGlmIEkgd291bGQgY292ZXIgbW9y
ZSBkYXRhIHBvaW50cywgdGhvc2Ugd291bGQgYmUgbGlrZWx5IGxlc3MgcG9wdWxh
ciB0aGFuIHRoZXNlIG9uZXMuIFRoaXMgZGF0YSBzZXQgbWlnaHQgYmUgYmlhc2Vk
IHRvd2FyZHMgSmF2YVNjcmlwdCBwcm9qZWN0cyBvbiBPcGVuQ29sbGVjdGl2ZSwg
YnV0IHRoZSBjaG9pY2UgZm9yIHNhbXBsaW5nIE9wZW5Db2xsZWN0aXZlIGlzIGJl
Y2F1c2UgaXQgcHJvdmlkZXMgZWFzeSB0cmFuc3BhcmVudCBkYXRhIG9uIHRoZSBm
aW5hbmNlcyBvZiB2YXJpb3VzIHByb2plY3RzLiBJIHdhbnQgdG8gcmVtaW5kIHRo
ZSByZWFkZXIgb2YgdGhlIGV4aXN0ZW5jZSBvZiBvdGhlciBwb3B1bGFyIG9wZW4g
c291cmNlIHByb2plY3RzIHN1Y2ggYXMgTGludXgsIG5naW54LCBWaWRlb0xBTiwg
YW5kIG90aGVycy4gSXQgd291bGQgYmUgZ29vZCB0byBpbmNvcnBvcmF0ZSB0aGUg
ZmluYW5jaWFsIGRhdGEgZnJvbSB0aG9zZSBwcm9qZWN0cyBpbiB0aGlzIGRhdGEg
c2V0LgoKRnJvbSBHaXRIdWIgZGF0YSBhbmQgT3BlbkNvbGxlY3RpdmUsIEkgd2Fz
IGFibGUgdG8gY2FsY3VsYXRlIGhvdyBtdWNoIHllYXJseSByZXZlbnVlIGZvciBh
IHByb2plY3QgZ29lcyB0byBlYWNoICJmdWxsLXRpbWUgZXF1aXZhbGVudCIgY29u
dHJpYnV0b3IuIFRoaXMgaXMgZXNzZW50aWFsbHkgdGhlaXIgc2FsYXJ5LiBPciwg
c2FpZCBiZXR0ZXIsIHRoaXMgaXMgaG93IG11Y2ggdGhlaXIgc2FsYXJ5IHZpYSBk
b25hdGlvbnMgd291bGQgYmUgaWYgdGhleSB3ZXJlIHdvcmtpbmcgZXhjbHVzaXZl
bHkgb24gdGhlIG9wZW4gc291cmNlIHByb2plY3QsIHdpdGhvdXQgYW55IGNvbXBs
ZW1lbnRhcnkgaW5jb21lLiBJdCBpcyBsaWtlbHkgdGhhdCBhIHNpemFibGUgYW1v
dW50IG9mIGNyZWF0b3JzIGFuZCBtYWludGFpbmVycyB3b3JrIG9ubHkgcGFydC10
aW1lIG9uIHRoZWlyIHByb2plY3RzLiBUaG9zZSB0aGF0IHdvcmsgZnVsbC10aW1l
IHNvbWV0aW1lcyBjb21wbGVtZW50IHRoZWlyIGluY29tZSB3aXRoIHNhdmluZ3Mg
b3IgYnkgbGl2aW5nIGluIGEgY291bnRyeSB3aXRoIGxvd2VyIGNvc3RzIG9mIGxp
dmluZywgW29yIGJvdGggKFNpbmRyZSBTb3JodXMpXShodHRwczovL3R3aXR0ZXIu
Y29tL3NpbmRyZXNvcmh1cy9zdGF0dXMvOTAyOTU0NjYwMjg1MTI4NzA0KS4KClRo
ZW4sIGJhc2VkIG9uIHRoZSBbbGF0ZXN0IFN0YWNrT3ZlcmZsb3cgZGV2ZWxvcGVy
IHN1cnZleV0oaHR0cHM6Ly9pbnNpZ2h0cy5zdGFja292ZXJmbG93LmNvbS9zdXJ2
ZXkvMjAxOSN3b3JrLV8tc2FsYXJ5LWJ5LWRldmVsb3Blci10eXBlKSwgd2Uga25v
dyB0aGF0IHRoZSBsb3cgZW5kIG9mIGRldmVsb3BlciBzYWxhcmllcyBpcyBhcm91
bmQgJDQwaywgd2hpbGUgdGhlIGhpZ2ggZW5kIG9mIGRldmVsb3BlciBzYWxhcmll
cyBpcyBhYm92ZSAkMTAway4gVGhhdCByYW5nZSBkZXBpY3RzIHRoZSBpbmR1c3Ry
eSBzdGFuZGFyZCBmb3IgZGV2ZWxvcGVycywgZ2l2ZW4gdGhlaXIgc3RhdHVzIGFz
IGtub3dsZWRnZSB3b3JrZXJzLCBtYW55IG9mIHdoaWNoIGFyZSBsaXZpbmcgaW4g
T0VDRCBjb3VudHJpZXMuIFRoaXMgYWxsb3dlZCBtZSB0byBjbGFzc2lmeSB0aGUg
cmVzdWx0cyBpbnRvIGZvdXIgY2F0ZWdvcmllczoKCi0gQkxVRTogNi1maWd1cmUg
c2FsYXJ5Ci0gR1JFRU46IDUtZmlndXJlIHNhbGFyeSB3aXRoaW4gaW5kdXN0cnkg
c3RhbmRhcmRzCi0gT1JBTkdFOiA1LWZpZ3VyZSBzYWxhcnkgYmVsb3cgb3VyIGlu
ZHVzdHJ5IHN0YW5kYXJkcwotIFJFRDogc2FsYXJ5IGJlbG93IHRoZSBbb2ZmaWNp
YWwgVVMgcG92ZXJ0eSB0aHJlc2hvbGRdKGh0dHBzOi8vcG92ZXJ0eS51Y2Rhdmlz
LmVkdS9mYXEvd2hhdC1hcmUtcG92ZXJ0eS10aHJlc2hvbGRzLXRvZGF5KQoKVGhl
IGZpcnN0IGNoYXJ0LCBiZWxvdywgc2hvd3MgdGVhbSBzaXplIGFuZCAicHJpY2Ui
IGZvciBlYWNoIEdpdEh1YiBzdGFyLgoKWyFbT3BlbiBzb3VyY2UgcHJvamVjdHMs
IGluY29tZS1wZXItc3RhciB2ZXJzdXMgdGVhbSBzaXplXSgvaW1nL3BvdmVydHkt
dGVhbXNpemUucG5nKV0oL2ltZy9wb3ZlcnR5LXRlYW1zaXplLnBuZykKCioqTW9y
ZSB0aGFuIDUwJSBvZiBwcm9qZWN0cyBhcmUgcmVkKio6IHRoZXkgY2Fubm90IHN1
c3RhaW4gdGhlaXIgbWFpbnRhaW5lcnMgYWJvdmUgdGhlIHBvdmVydHkgbGluZS4g
MzElIG9mIHRoZSBwcm9qZWN0cyBhcmUgb3JhbmdlLCBjb25zaXN0aW5nIG9mIGRl
dmVsb3BlcnMgd2lsbGluZyB0byB3b3JrIGZvciBhIHNhbGFyeSB0aGF0IHdvdWxk
IGJlIGNvbnNpZGVyZWQgdW5hY2NlcHRhYmxlIGluIG91ciBpbmR1c3RyeS4gMTIl
IGFyZSBncmVlbiwgYW5kIG9ubHkgMyUgYXJlIGJsdWU6IFdlYnBhY2sgYW5kIFZ1
ZS5qcy4gSW5jb21lIHBlciBHaXRIdWIgc3RhciBpcyBpbXBvcnRhbnQ6IHN1c3Rh
aW5hYmxlIHByb2plY3RzIGdlbmVyYWxseSBoYXZlIGFib3ZlICQyL3N0YXIuIFRo
ZSBtZWRpYW4gdmFsdWUsIGhvd2V2ZXIsIGlzICQxLjIyL3N0YXIuIFRlYW0gc2l6
ZSBpcyBhbHNvIGltcG9ydGFudCBmb3Igc3VzdGFpbmFiaWxpdHk6IHRoZSBzbWFs
bGVyIHRoZSB0ZWFtLCB0aGUgbW9yZSBsaWtlbHkgaXQgY2FuIHN1c3RhaW4gaXRz
IG1haW50YWluZXJzLgoKVGhlIG1lZGlhbiBkb25hdGlvbiBwZXIgeWVhciBpcyAk
MjE3LCB3aGljaCBpcyBzdWJzdGFudGlhbCB3aGVuIHVuZGVyc3Rvb2Qgb24gYW4g
aW5kaXZpZHVhbCBsZXZlbCwgYnV0IGluIHJlYWxpdHkgaW5jbHVkZXMgc3BvbnNv
cnNoaXAgZnJvbSBjb21wYW5pZXMgdGhhdCBhcmUgZG9pbmcgdGhpcyBhbHNvIGZv
ciB0aGVpciBvd24gbWFya2V0aW5nIHB1cnBvc2VzLgoKVGhlIG5leHQgY2hhcnQg
c2hvd3MgaG93IHJldmVudWUgc2NhbGVzIHdpdGggcG9wdWxhcml0eS4KClshW09w
ZW4gc291cmNlIHByb2plY3RzLCB5ZWFybHkgcmV2ZW51ZSB2ZXJzdXMgR2l0SHVi
IHN0YXJzXSgvaW1nL3BvdmVydHktcG9wdWxhcml0eS5wbmcpXSgvaW1nL3BvdmVy
dHktcG9wdWxhcml0eS5wbmcpCgpZb3UgY2FuIGJyb3dzZSB0aGUgZGF0YSB5b3Vy
c2VsZiBieSBhY2Nlc3NpbmcgdGhpcyBbRGF0IGFyY2hpdmVdKGh0dHBzOi8vZGF0
cHJvamVjdC5vcmcvKSB3aXRoIGEgTGlicmVPZmZpY2UgQ2FsYyBzcHJlYWRzaGVl
dDoKCmBgYApkYXQ6Ly9iZjdiOTEyZmZmMWU2NGE1MmI4MDM0NDRkODcxNDMzYzU5
NDZjOTkwYWU1MWYyMDQ0MDU2YmY2Zjk2NTVlY2JmCmBgYAoKIyMgUG9wdWxhcml0
eSB2ZXJzdXMgZmFpcm5lc3MKCldoaWxlIHBvcHVsYXJpdHkgaXMga2V5IHRvIGdy
ZWVuIGFuZCBibHVlIHN1c3RhaW5hYmlsaXR5LCB0aGVyZSBhcmUgcG9wdWxhciBw
cm9kdWN0cyB0aGF0IGFyZSBiZWxvdyB0aGUgcG92ZXJ0eSBsaW5lLCBzdWNoIGFz
IFtQcmV0dGllcl0oaHR0cHM6Ly9naXRodWIuY29tL3ByZXR0aWVyL3ByZXR0aWVy
KSwgW0N1cmxdKGh0dHBzOi8vZ2l0aHViLmNvbS9jdXJsL2N1cmwpLCBbSmVreWxs
XShodHRwczovL2dpdGh1Yi5jb20vamVreWxsL2pla3lsbCksIFtFbGVjdHJvbl0o
aHR0cHM6Ly9naXRodWIuY29tL2VsZWN0cm9uL2VsZWN0cm9uKS4gVGhpcyBkb2Vz
bid0IG1lYW4gdGhlIHBlb3BsZSB3b3JraW5nIG9uIHRob3NlIHByb2plY3RzIGFy
ZSBwb29yLCBiZWNhdXNlIGluIHNldmVyYWwgY2FzZXMgdGhlIG1haW50YWluZXJz
IGhhdmUgam9icyBhdCBjb21wYW5pZXMgdGhhdCBhbGxvdyBvcGVuIHNvdXJjZSBj
b250cmlidXRpb25zLiBXaGF0IGl0IGRvZXMgbWVhbiwgaG93ZXZlciwgaXMgdGhh
dCB1bmxlc3MgY29tcGFuaWVzIHRha2UgYW4gYWN0aXZlIHJvbGUgaW4gc3VwcG9y
dGluZyBvcGVuIHNvdXJjZSB3aXRoIHNpZ25pZmljYW50IGZ1bmRpbmcsIHdoYXQn
cyBsZWZ0IGlzIGEgc2l0dWF0aW9uIHdoZXJlIG1vc3Qgb3BlbiBzb3VyY2UgbWFp
bnRhaW5lcnMgYXJlIHNldmVyZWx5IHVuZGVyZnVuZGVkLiBPbiBkb25hdGlvbnMg
YWxvbmUsIG9wZW4gc291cmNlIGlzIHN1c3RhaW5hYmxlIChmYWlybHkgd2l0aGlu
IGluZHVzdHJ5IHN0YW5kYXJkcykgaW4gYSBzd2VldCBzcG90OiB3aGVuIGEgcG9w
dWxhciBwcm9qZWN0LCB3aXRoIGEgc3VmZmljaWVudGx5IHNtYWxsIHRlYW0sIGtu
b3dzIGhvdyB0byBnYXRoZXIgc2lnbmlmaWNhbnQgZnVuZGluZyBmcm9tIGEgY3Jv
d2Qgb2YgZG9uYXRvcnMgb3Igc3BvbnNvciBvcmdhbml6YXRpb25zLiBGYWlyIHN1
c3RhaW5hYmlsaXR5IGlzIHNlbnNpdGl2ZSB0byB0aGVzZSBwYXJhbWV0ZXJzLgoK
QmVjYXVzZSB2aXNpYmlsaXR5IGlzIGZ1bmRhbWVudGFsIGZvciBkb25hdGlvbi1k
cml2ZW4gc3VzdGFpbmFiaWxpdHksIHRoZSAiaW52aXNpYmxlIGluZnJhc3RydWN0
dXJlIiBwcm9qZWN0cyBhcmUgb2Z0ZW4gaW4gYSBtdWNoIHdvcnNlIHNpdHVhdGlv
biB0aGF0IHRoZSB2aXNpYmxlIG9uZXMuIEZvciBpbnN0YW5jZSwgW0NvcmUtanNd
KGh0dHBzOi8vZ2l0aHViLmNvbS96bG9pcm9jay9jb3JlLWpzKSBpcyBsZXNzIHBv
cHVsYXIgdGhhbiBbQmFiZWxdKGh0dHBzOi8vZ2l0aHViLmNvbS9iYWJlbC9iYWJl
bCksIGFsdGhvdWdoIFtpdCBpcyBhIGRlcGVuZGVuY3kgaW4gQmFiZWxdKGh0dHBz
Oi8vYmFiZWxqcy5pby9kb2NzL2VuL25leHQvYmFiZWwtcG9seWZpbGwuaHRtbCku
Cgo8dGFibGUgc3R5bGU9Im1hcmdpbjogMTVweCAwOyI+CiAgPHRoZWFkPgogICAg
PHRyPgogICAgICA8dGg+TGlicmFyeTwvdGg+CiAgICAgIDx0aD5Vc2VkIGJ5PC90
aD4KICAgICAgPHRoPlN0YXJzPC90aD4KICAgICAgPHRoPidTYWxhcnknPC90aD4K
ICAgIDwvdHI+CiAgPC90aGVhZD4KICA8dGJvZHkgc3R5bGU9InRleHQtYWxpZ246
cmlnaHQiPgogICAgPHRyPgogICAgICA8dGQgc3R5bGU9InBhZGRpbmc6NXB4O2Jv
cmRlcjoxcHggc29saWQgI2NkY2RjZDsiPkJhYmVsPC90ZD4KICAgICAgPHRkIHN0
eWxlPSJwYWRkaW5nOjVweDtib3JkZXI6MXB4IHNvbGlkICNjZGNkY2Q7Ij4zNTAy
ODQ8L3RkPgogICAgICA8dGQgc3R5bGU9InBhZGRpbmc6NXB4O2JvcmRlcjoxcHgg
c29saWQgI2NkY2RjZDsiPjMzNDEy2a08L3RkPgogICAgICA8dGQgc3R5bGU9InBh
ZGRpbmc6NXB4O2JvcmRlcjoxcHggc29saWQgI2NkY2RjZDsiPiQ3MDAxNjwvdGQ+
CiAgICA8L3RyPgogICAgPHRyPgogICAgICA8dGQgc3R5bGU9InBhZGRpbmc6NXB4
O2JvcmRlcjoxcHggc29saWQgI2NkY2RjZDsiPkNvcmUtanM8L3RkPgogICAgICA8
dGQgc3R5bGU9InBhZGRpbmc6NXB4O2JvcmRlcjoxcHggc29saWQgI2NkY2RjZDsi
PjI0NDI3MTI8L3RkPgogICAgICA8dGQgc3R5bGU9InBhZGRpbmc6NXB4O2JvcmRl
cjoxcHggc29saWQgI2NkY2RjZDsiPjg3MDLZrTwvdGQ+CiAgICAgIDx0ZCBzdHls
ZT0icGFkZGluZzo1cHg7Ym9yZGVyOjFweCBzb2xpZCAjY2RjZGNkOyI+JDE2MjA0
PC90ZD4KICAgIDwvdHI+CiAgPC90Ym9keT4KPC90YWJsZT4KClNvbWUgcHJvcG9z
ZWQgc29sdXRpb25zIGhhdmUgYmVlbiB0byAidHJpY2tsZSBkb3duIiBkb25hdGlv
bnMgZnJvbSB0aGUgd2VsbC1rbm93biBwcm9qZWN0cyB0byB0aGUgbGVhc3QsIGd1
aWRlZCBieSB0b29scyBzdWNoIGFzIFtCYWNrWW91clN0YWNrXShodHRwczovL2Jh
Y2t5b3Vyc3RhY2suY29tLykgYW5kIFtHaXRIdWIncyBuZXcgQ29udHJpYnV0b3Ig
b3ZlcnZpZXddKGh0dHBzOi8vZ2l0aHViLmJsb2cvMjAxOS0wNS0yMy1hbm5vdW5j
aW5nLWdpdGh1Yi1zcG9uc29ycy1hLW5ldy13YXktdG8tY29udHJpYnV0ZS10by1v
cGVuLXNvdXJjZS8jbmF0aXZlLXRvLXlvdXItZ2l0aHViLXdvcmtmbG93KS4gVGhp
cyB3b3VsZCB3b3JrIGlmIHRoZSB3ZWxsLWtub3duIHByb2plY3RzIGhhZCBhIGh1
Z2Ugc3VycGx1cyB0byBzaGFyZSB3aXRoIHRyYW5zaXRpdmUgZGVwZW5kZW5jaWVz
LiBUaGF0IGlzIGhhcmRseSBwb3NzaWJsZSwgb25seSBWdWUuanMgaGFzIGVub3Vn
aCBzdXJwbHVzIHRvIHNoYXJlLCBhbmQgaXQgY291bGQgb25seSBkbyB0aGF0IHdp
dGggMyBvciA0IG90aGVyIGRldmVsb3BlcnMuIFZ1ZS5qcyBpcyB0aGUgZXhjZXB0
aW9uLCBvdGhlciBwcm9qZWN0cyBjYW5ub3QgYWZmb3JkIHNoYXJpbmcgdGhlaXIg
aW5jb21lLCBiZWNhdXNlIHRoYXQgd291bGQgY2F1c2UgZXZlcnlvbmUgaW52b2x2
ZWQgdG8gcmVjZWl2ZSBwb29ybHkuCgpJbiB0aGUgY2FzZSBvZiBCYWJlbCBhbmQg
Q29yZS1qcywgdGhlcmUgaXNuJ3QgYSBsb3Qgb2Ygc3VycGx1cyB0byBzaGFyZSBm
b3J3YXJkcy4gT25lIG9mIEhlbnJ5IFpodSdzIHBvaW50cyBpbiBoaXMgdGFsayB3
YXMgcHJlY2lzZWx5IHRoYXQgdGhlIG1vbmV5IHJlY2VpdmVkIGlzIGFscmVhZHkg
dG9vIGxpbWl0ZWQuIEl0IG1pZ2h0IHNlZW0gbGlrZSBCYWJlbCBpcyAqdGhlKiB2
aXNpYmxlIHByb2plY3QgaW4gdGhpcyBzaXR1YXRpb24sIGJ1dCBpdCBzdXJwcmlz
ZWQgbWUgdG8gaGVhciBmcm9tIEhlbnJ5IHRoYXQgbWFueSBwZW9wbGUgYXJlIG5v
dCBhd2FyZSBvZiBCYWJlbCBhbHRob3VnaCB0aGV5IHVzZSBpdCwgYmVjYXVzZSB0
aGV5IG1pZ2h0IGJlIHVzaW5nIGl0IGFzIGEgdHJhbnNpdGl2ZSBkZXBlbmRlbmN5
LgoKRnJvbSB0aGUgb3RoZXIgc2lkZSBvZiB0aGUgY29pbiwgdGhlIG1haW50YWlu
ZXJzIG9mIGxvd2VyIGxldmVsIGxpYnJhcmllcyByZWNvZ25pemUgdGhlIG5lZWQg
dG8gcGFydG5lciB3aXRoIG1vcmUgdmlzaWJsZSBwcm9qZWN0cyBvciBbZXZlbiBt
ZXJnZSBwcm9qZWN0c10oaHR0cHM6Ly90d2l0dGVyLmNvbS93b29vcm0vc3RhdHVz
LzEwNjI0MDQ5OTcyNDAwMTI4MDApIGluIG9yZGVyIHRvIGluY3JlYXNlIG92ZXJh
bGwgdmlzaWJpbGl0eSwgcG9wdWxhcml0eSwgYW5kIHRodXMgZnVuZGluZy4gVGhp
cyBpcyB0aGUgY2FzZSBvZiBVbmlmaWVkIGJ5IFRpdHVzLCB3aGljaCBpcyBhIHBy
b2plY3QgeW91IG1pZ2h0IG5vdCBoYXZlIGhlYXJkIG9mLCBidXQgVW5pZmllZCBh
bmQgaXRzIG1hbnkgcGFja2FnZXMgYXJlIHVzZWQgaW4gW01EWF0oaHR0cHM6Ly9n
aXRodWIuY29tL21keC1qcy9tZHgvYmxvYi9kZWZmMzZiZWJmZWRiM2E5ZGUwYTA1
NzVlZTlhMWI1NWI5YjhhYTE4L3BhY2thZ2UuanNvbiNMMjApLCBbR2F0c2J5XSho
dHRwczovL2dpdGh1Yi5jb20vZ2F0c2J5anMvZ2F0c2J5L2Jsb2IvMjVkNGE0ZGFi
NjZlMDQ3MTdmYjA5ZGM1ZWRiMWY3Yjg1NmZjNDFmZi9wYWNrYWdlcy9nYXRzYnkt
dHJhbnNmb3JtZXItcmVtYXJrL3BhY2thZ2UuanNvbiNMMjYpLCBbUHJldHRpZXJd
KGh0dHBzOi8vZ2l0aHViLmNvbS9wcmV0dGllci9wcmV0dGllci9ibG9iLzI0ZjE2
MWRiNTY1YzFhNjY5MmVlOTgxOTExOTNkOWNmOWZmMzFkNmYvcGFja2FnZS5qc29u
I0w2NiksIFtTdG9yeWJvb2tdKGh0dHBzOi8vZ2l0aHViLmNvbS9zdG9yeWJvb2tq
cy9zdG9yeWJvb2svYmxvYi9mZWQyZmZhNWUyOTE5MjIwZjA1MDhlNTQwYjJlYWU4
NDg1MjNmZWU1L3BhY2thZ2UuanNvbiNMMjE0KSBhbmQgbWFueSBvdGhlcnMuCgpJ
dCBpcyBhbHNvIG5vdCB0cnVlIHRoYXQgcG9wdWxhciBwcm9qZWN0cyBhcmUgZmlu
YW5jaWFsbHkgYmV0dGVyIG9mZiB0aGFuIHRoZWlyIGxlc3MgcG9wdWxhciBkZXBl
bmRlbmNpZXMuIFByZXR0aWVyICgzMmsgc3RhcnMpIHVzZXMgVW5pZmllZCAoMWsg
c3RhcnMpIGFzIGEgZGVwZW5kZW5jeSwgYnV0IFVuaWZpZWQgaGFzIG1vcmUgeWVh
cmx5IHJldmVudWUgdGhhbiBQcmV0dGllci4gSW4gZmFjdCwgbWFueSBvZiB0aGUg
cG9wdWxhciBwcm9qZWN0cyB0aGF0IGRlcGVuZCBvbiBVbmlmaWVkIGFyZSByZWNl
aXZpbmcgbGVzcyBmdW5kaW5nIHBlciB0ZWFtIG1lbWJlci4gQnV0IFVuaWZpZWQg
aXRzZWxmIGlzIHN0aWxsIHJlY2VpdmluZyBiZWxvdyBpbmR1c3RyeSBzdGFuZGFy
ZHMsIG5vdCBpbiBhIHNpdHVhdGlvbiBvZiB0cmlja2xpbmcgZG93biAob3IgdXA/
KSB0aGF0IGZ1bmRpbmcuCgpPdGhlciB0aW1lcywgaXQncyBub3QgZWFzeSB0byBz
YXkgdGhhdCB3aGVuIGEgcHJvamVjdCBBIGlzIHVzaW5nIHByb2plY3QgQiwgaXQg
c2hvdWxkIG5lY2Vzc2FyaWx5IGRvbmF0ZSB0byBCLCBiZWNhdXNlIGl0IG1pZ2h0
IGJlIHRoYXQgQiBhbHNvIHVzZXMgQSEgRm9yIGluc3RhbmNlLCBbQmFiZWwgaXMg
YSBkZXBlbmRlbmN5IGluIFByZXR0aWVyXShodHRwczovL2dpdGh1Yi5jb20vcHJl
dHRpZXIvcHJldHRpZXIvYmxvYi8yNGYxNjFkYjU2NWMxYTY2OTJlZTk4MTkxMTkz
ZDljZjlmZjMxZDZmL3BhY2thZ2UuanNvbiNMMTkpLCBhbmQgW1ByZXR0aWVyIGlz
IGEgZGVwZW5kZW5jeSBpbiBCYWJlbF0oaHR0cHM6Ly9naXRodWIuY29tL2JhYmVs
L2JhYmVsL2Jsb2IvZjkyYzJhZTgzMGRiYjMyMDEzYTM2ZmE3NGZhY2QyZWY5NWI5
OTQ3ZC9wYWNrYWdlLmpzb24jTDU5KS4gUHJvYmFibHkgbWFueSBvZiB0aGUgcHJv
amVjdHMgY292ZXJlZCBpbiB0aGlzIHN0dWR5IGhhdmUgYSBjb21wbGV4IHdlYiBv
ZiBkZXBlbmRlbmNpZXMgKmJldHdlZW4qIGVhY2ggb3RoZXIsIHRoYXQgaXQgYmVj
b21lcyBkaWZmaWN1bHQgdG8gc2F5IGhvdyBzaG91bGQgbW9uZXkgZmxvdyB3aXRo
aW4gdGhlc2UgcHJvamVjdHMuCgojIyBFeHBsb2l0YXRpb24KClRoZSB0b3RhbCBh
bW91bnQgb2YgbW9uZXkgYmVpbmcgcHV0IGludG8gb3BlbiBzb3VyY2UgaXMgbm90
IGVub3VnaCBmb3IgYWxsIHRoZSBtYWludGFpbmVycy4gSWYgd2UgYWRkIHVwIGFs
bCBvZiB0aGUgeWVhcmx5IHJldmVudWUgZnJvbSB0aG9zZSBwcm9qZWN0cyBpbiB0
aGlzIGRhdGEgc2V0LCBpdCdzICQyLjUgbWlsbGlvbi4gVGhlIG1lZGlhbiBzYWxh
cnkgaXMgYXBwcm94aW1hdGVseSAkOWssIHdoaWNoIGlzIGJlbG93IHRoZSBwb3Zl
cnR5IGxpbmUuIElmIHNwbGl0IHVwIHRoYXQgbW9uZXkgZXZlbmx5LCB0aGF0J3Mg
cm91Z2hseSAkMjJrLCB3aGljaCBpcyBzdGlsbCBiZWxvdyBpbmR1c3RyeSBzdGFu
ZGFyZHMuCgpUaGUgY29yZSBwcm9ibGVtIGlzIG5vdCB0aGF0IG9wZW4gc291cmNl
IHByb2plY3RzIGFyZSBub3Qgc2hhcmluZyB0aGUgbW9uZXkgcmVjZWl2ZWQuIFRo
ZSBwcm9ibGVtIGlzIHRoYXQsIGluIHRvdGFsIG51bWJlcnMsIG9wZW4gc291cmNl
IGlzIG5vdCBnZXR0aW5nIGVub3VnaCBtb25leS4gJDIuNSBtaWxsaW9uIGlzIG5v
dCBlbm91Z2guIFRvIHB1dCB0aGlzIG51bWJlciBpbnRvIHBlcnNwZWN0aXZlLCBz
dGFydHVwcyBnZXQgdHlwaWNhbGx5IG11Y2ggbW9yZSB0aGFuIHRoYXQuCgpbVGlk
ZWxpZnQgaGFzIHJlY2VpdmVkICQ0MCBtaWxsaW9uXShodHRwczovL3d3dy5jcnVu
Y2hiYXNlLmNvbS9vcmdhbml6YXRpb24vdGlkZWxpZnQpIGluIGZ1bmRpbmcsIHRv
ICJoZWxwIG9wZW4gc291cmNlIGNyZWF0b3JzIGFuZCBtYWludGFpbmVycyBnZXQg
ZmFpcmx5IGNvbXBlbnNhdGVkIGZvciB0aGVpciB3b3JrIiBbKHF1b3RlKV0oaHR0
cHM6Ly90aWRlbGlmdC5jb20vZG9jcy9saWZ0aW5nL3BheWluZykuIFRoZXkgaGF2
ZSBhIFt0ZWFtIG9mIDI3IHBlb3BsZV0oaHR0cHM6Ly90aWRlbGlmdC5jb20vYWJv
dXQpLCBzb21lIG9mIHRoZW0gZXgtZW1wbG95ZWVzIGZyb20gbGFyZ2UgY29tcGFu
aWVzIChzdWNoIGFzIEdvb2dsZSBhbmQgR2l0SHViKS4gVGhleSBwcm9iYWJseSBk
b24ndCByZWNlaXZlIHRoZSBsb3dlciB0aWVyIG9mIHNhbGFyaWVzLiBZZXQsIG1h
bnkgb2YgdGhlIFtvcGVuIHNvdXJjZSBwcm9qZWN0cyB0aGV5IHNob3djYXNlXSho
dHRwczovL3RpZGVsaWZ0LmNvbS9zdWJzY3JpcHRpb24pIG9uIHRoZWlyIHdlYnNp
dGUgYXJlIGJlbG93IHBvdmVydHkgbGluZSByZWdhcmRpbmcgaW5jb21lIGZyb20g
ZG9uYXRpb25zLiBXZSBhY3R1YWxseSBkbyBub3Qga25vdyBob3cgbXVjaCBUaWRl
bGlmdCBpcyBnaXZpbmcgdG8gdGhlIG1haW50YWluZXJzIG9mIHRoZXNlIHByb2pl
Y3RzLCBidXQgdGhlaXIgW3N1YnNjcmlwdGlvbiBwcmljaW5nXShodHRwczovL3Rp
ZGVsaWZ0LmNvbS9zdWJzY3JpcHRpb24vcHJpY2luZykgaXMgdmVyeSBoaWdoLiBP
cGFxdWVuZXNzIG9mIHByaWNlIGFuZCBjb3N0IHN0cnVjdHVyZSBoYXMgaGlzdG9y
aWNhbGx5IGhlbHBlZCBjb21wYW5pZXMgaGlkZSBpbmVxdWFsaXR5LgoKR2l0SHVi
IHdhcyBbYm91Z2h0IGJ5IE1pY3Jvc29mdCBmb3IgJDcuNSBiaWxsaW9uXShodHRw
czovL3ZlbnR1cmViZWF0LmNvbS8yMDE4LzA2LzA0L21pY3Jvc29mdC1jb25maXJt
cy1pdC13aWxsLWFjcXVpcmUtZ2l0aHViLWZvci03LTUtYmlsbGlvbi8pLiBUbyBt
YWtlIHRoYXQgcXVhbnRpdHkgZWFzaWVyIHRvIGdyb2ssIHRoZSBhbW91bnQgb2Yg
bW9uZXkgTWljcm9zb2Z0IHBhaWQgdG8gYWNxdWlyZSBHaXRIdWIg4oCTIHRoZSBj
b21wYW55IOKAkyBpcyBtb3JlIHRoYW4gKiozMDAweCoqIHdoYXQgdGhlIG9wZW4g
c291cmNlIGNvbW11bml0eSBpcyBnZXR0aW5nIHllYXJseS4gSW4gb3RoZXIgd29y
ZHMsIGlmIHRoZSBvcGVuIHNvdXJjZSBjb21tdW5pdHkgc2F2ZWQgdXAgZXZlcnkg
cGVubnkgb2YgdGhlIG1vbmV5IHRoZXkgZXZlciByZWNlaXZlZCwgYWZ0ZXIgYSBj
b3VwbGUgdGhvdXNhbmQgeWVhcnMgdGhleSBjb3VsZCBwZXJoYXBzIGhhdmUgZW5v
dWdoIG1vbmV5IHRvIGJ1eSBHaXRIdWIgam9pbnRseS4gQW5kIG5vdyBHaXRIdWIg
aXRzZWxmIGhhcyBpdHMgb3duIFtPcGVuIFNvdXJjZSBFY29ub215IHRlYW1dKGh0
dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9bjQ3ckNhOWR4ZjgpIChob3cg
YmlnIGlzIHRoaXMgdGVhbSBhbmQgd2hhdCBhcmUgdGhlaXIgc2FsYXJpZXM/KSwg
YnV0IHRoZSBuZXcgR2l0SHViIHNwb25zb3JzIGZlYXR1cmUgaXMgZmFyIGxlc3Mg
dHJhbnNwYXJlbnQgdGhhbiBPcGVuQ29sbGVjdGl2ZS4gQWdhaW5zdCBHaXRIdWIn
cyB0cmFkaXRpb25hbCBjdWx0dXJlIG9mIG9wZW4gZGF0YSAoc3VjaCBhcyB0aGUg
Y29tbWl0cyBjYWxlbmRhciBvciB0aGUgY29udHJpYnV0b3JzIGNoYXJ0KSwgd2hl
biBpdCBjb21lcyB0byBkb25hdGlvbnMsIGEgdXNlciBjYW5ub3Qga25vdyBob3cg
bXVjaCBlYWNoIG9wZW4gc291cmNlIG1haW50YWluZXIgaXMgZ2V0dGluZy4gSXQn
cyBvcGFxdWUuCgpJZiBNaWNyb3NvZnQgR2l0SHViIGlzIHNlcmlvdXMgYWJvdXQg
aGVscGluZyBmdW5kIG9wZW4gc291cmNlLCB0aGV5IHNob3VsZCBwdXQgdGhlaXIg
bW9uZXkgd2hlcmUgdGhlaXIgbW91dGggaXM6IGRvbmF0ZSBhdCBsZWFzdCAkMSBi
aWxsaW9uIHRvIG9wZW4gc291cmNlIHByb2plY3RzLiBFdmVuIGEgbWVyZSAkMS41
IG1pbGxpb24gcGVyIHllYXIgd291bGQgYmUgZW5vdWdoIHRvIG1ha2UgYWxsIHRo
ZSBwcm9qZWN0cyBpbiB0aGlzIHN0dWR5IGJlY29tZSBncmVlbi4gVGhlIFtNYXRj
aGluZyBGdW5kXShodHRwczovL2hlbHAuZ2l0aHViLmNvbS9lbi9hcnRpY2xlcy9h
Ym91dC1naXRodWItc3BvbnNvcnMjYWJvdXQtdGhlLWdpdGh1Yi1zcG9uc29ycy1t
YXRjaGluZy1mdW5kKSBpbiBHaXRIdWIgU3BvbnNvcnMgaXMgbm90IGVub3VnaCwg
aXQgZ2l2ZXMgYSBtYWludGFpbmVyIGF0IG1vc3QganVzdCAkNWsgaW4gYSB5ZWFy
LCB3aGljaCBpcyBub3Qgc3VmZmljaWVudCB0byByYWlzZSB0aGUgbWFpbnRhaW5l
ciBmcm9tIHRoZSBwb3ZlcnR5IHRocmVzaG9sZCB1cCB0byBpbmR1c3RyeSBzdGFu
ZGFyZC4KCldlIG5vdyBoYXZlIGRhdGEgdG8gc2F5IHRoYXQgb3BlbiBzb3VyY2Ug
Y3JlYXRvcnMgYW5kIG1haW50YWluZXJzIGFyZSByZWNlaXZpbmcgcG9vciBpbmNv
bWUsIGFuZCB3ZSBoYXZlIGRhdGEgdG8gc2F5IHRoYXQgY29tcGFuaWVzICJoZWxw
aW5nIiBvcGVuIHNvdXJjZSBhcmUgcmVjZWl2aW5nIG1pbGxpb25zLCBhbmQgbW9z
dCBsaWtlbHkgdG9wIHNhbGFyaWVzLiBPdGhlciBtaWxsaW9uYWlyZSBhbmQgYmls
bGlvbmFpcmUgY29tcGFuaWVzIGFyZSBtYWtpbmcgcHJvZml0cyBieSBjb21iaW5p
bmcgb3BlbiBzb3VyY2UgbGlicmFyaWVzIGFuZCBjb21wb25lbnRzIHRvIGJ1aWxk
IHByb3ByaWV0YXJ5IHNvZnR3YXJlLiBJIHVuZGVyc3RhbmQgW0RISCdzIHN0YW5j
ZSBvbiAqJ1RoZXJlIGlzIG5vIHRyYWdlZHknKl0oaHR0cHM6Ly95b3V0dS5iZS9W
QndXYkZwa2x0Zz9saXN0PVBMRTd0UVVkUktjeWFPcTNIbFJtOWhfUV9XaFdLcW01
eGMmdD0xMzYyKSBpbiBvcGVuIHNvdXJjZSBzdXN0YWluYWJpbGl0eSwgYW5kIGlu
IGZhY3Qgd2hlbiBJIHdhdGNoZWQgaGlzIHRhbGsgSSB3YXMgaW5jbGluZWQgdG8g
YWdyZWUuIEhvd2V2ZXIsIHRoZSByZWNlbnQgZGF0YSBJIGNvbXBpbGVkIOKAkyBv
dXQgb2YgY3VyaW9zaXR5IOKAkyBzaG93ZWQgbWUgdGhlIGRlZmF1bHQgcmVhbGl0
eSBvZiBvcGVuIHNvdXJjZSBmaW5hbmNlcywgaW5kaWNhdGluZyBhIHNldmVyZSBp
bWJhbGFuY2UgYmV0d2VlbiB3b3JrIHF1YWxpdHkgYW5kIGNvbXBlbnNhdGlvbi4g
RnVsbC10aW1lIG1haW50YWluZXJzIGFyZSB0ZWNobmljYWxseSB0YWxlbnRlZCBw
ZW9wbGUgcmVzcG9uc2libGUgZm9yIGlzc3VlIG1hbmFnZW1lbnQsIHNlY3VyaXR5
LCBuYXZpZ2F0aW5nIHRveGljIGNvbXBsYWludHMsIHdoaWxlIHJlY2VpdmluZyBi
ZWxvdyB0aGUgcG92ZXJ0eSB0aHJlc2hvbGQuCgpUaGUgc3RydWdnbGUgb2Ygb3Bl
biBzb3VyY2Ugc3VzdGFpbmFiaWxpdHkgaXMgdGhlIG1pbGxlbm5pdW0tb2xkIHN0
cnVnZ2xlIG9mIGh1bWFuaXR5IHRvIGZyZWUgaXRzZWxmIGZyb20gc2xhdmVyeSwg
Y29sb25pemF0aW9uLCBhbmQgZXhwbG9pdGF0aW9uLiBUaGlzIGlzIG5vdCB0aGUg
Zmlyc3QgdGltZSBoYXJkLXdvcmtpbmcgaG9uZXN0IHBlb3BsZSBhcmUgZ2l2aW5n
IHRoZWlyIGFsbCwgZm9yIHVuZmFpciBjb21wZW5zYXRpb24uCgpUaGlzIGlzIHRo
ZXJlZm9yZSBub3QgYSBuZXcgcHJvYmxlbSwgYW5kIGl0IGRvZXMgbm90IHJlcXVp
cmUgY29tcGxpY2F0ZWQgbmV3IHNvbHV0aW9ucy4gSXQgaXMgc2ltcGx5IGEgdmVy
c2lvbiBvZiBpbmp1c3RpY2UuIFRvIGZpeCBpdCBpcyBub3QgYSBtYXR0ZXIgb2Yg
cmVjZWl2aW5nIGNvbXBhc3Npb24gYW5kIG1vcmFsIGJlaGF2aW9yIGZyb20gY29t
cGFuaWVzLCBmb3IgY29tcGFuaWVzIGFyZSBmdW5kYW1lbnRhbGx5IGJ1aWx0IHRv
IGRvIHNvbWV0aGluZyBlbHNlIHRoYW4gdGhhdC4gQ29tcGFuaWVzIHNpbXBseSBm
b2xsb3cgc29tZSBiYXNpYyBmaW5hbmNpYWwgcnVsZXMgb2Ygc29jaWV0eSB3aGls
ZSB0cnlpbmcgdG8gb3B0aW1pemUgZm9yIHByb2ZpdCBhbmQvb3IgZG9taW5hdGlv
bi4KCk9wZW4gc291cmNlIGluZnJhc3RydWN0dXJlIGlzIGEgY29tbW9ucywgbXVj
aCBsaWtlIG91ciBlY29sb2dpY2FsIHN5c3RlbXMuIEJlY2F1c2Ugb3VyIHNvY2ll
dGllcyBkaWQgbm90IGhhdmUgcnVsZXMgdG8gcHJldmVudCB0aGUgZWPqb2xvZ2lj
YWwgc3lzdGVtcyBmcm9tIGJlaW5nIGV4cGxvaXRlZCwgY29tcGFuaWVzIGhhdmUg
W2VuZ2FnZWQgaW4gaW5kdXN0cmlhbGl6ZWQgcmVzb3VyY2UgZXh0cmFjdGlvbl0o
aHR0cHM6Ly9vdXJ3b3JsZGluZGF0YS5vcmcvZm9zc2lsLWZ1ZWxzKS4gT3ZlciBt
YW55IGRlY2FkZXMgdGhpcyBpcyBbZGVwbGV0aW5nIHRoZSBlbnZpcm9ubWVudF0o
aHR0cHM6Ly9vdXJ3b3JsZGluZGF0YS5vcmcvZm9yZXN0cyksIGFuZCBub3cgd2Ug
YXJlIGZhY2luZyBhIFtjbGltYXRlIGNyaXNpc10oaHR0cHM6Ly93d3cudGhlZ3Vh
cmRpYW4uY29tL2Vudmlyb25tZW50LzIwMTkvbWF5LzE3L3doeS10aGUtZ3VhcmRp
YW4taXMtY2hhbmdpbmctdGhlLWxhbmd1YWdlLWl0LXVzZXMtYWJvdXQtdGhlLWVu
dmlyb25tZW50KSwgW3Byb3Zlbl0oaHR0cHM6Ly9jbGltYXRlLm5hc2EuZ292Lykg
W3Rocm91Z2ggc2NpZW50aWZpY2FsIGNvbnNlbnN1c10oaHR0cHM6Ly9hcmNoaXZl
LmlwY2MuY2gvcGRmL2Fzc2Vzc21lbnQtcmVwb3J0L2FyNS9zeXIvU1lSX0FSNV9G
SU5BTF9mdWxsX3djb3Zlci5wZGYpIHRvIGJlIGEgW3N1YnN0YW50aWFsIHRocmVh
dCB0byBodW1hbml0eV0oaHR0cHM6Ly9uZXdzLnVuLm9yZy9lbi9zdG9yeS8yMDE4
LzA1LzEwMDk3ODIpIGFuZCBbYWxsIGxpZmUgb24gdGhlIHBsYW5ldF0oaHR0cHM6
Ly93d3cuaXBiZXMubmV0L25ld3MvTWVkaWEtUmVsZWFzZS1HbG9iYWwtQXNzZXNz
bWVudCkuIE9wZW4gc291cmNlIG1pc2FwcHJvcHJpYXRpb24gaXMgc2ltcGx5IGEg
c21hbGwgdmVyc2lvbiBvZiB0aGF0LCB3aXRoIGxlc3MgZHJhbWF0aWMgY29uc2Vx
dWVuY2VzLgoKSWYgeW91IHdhbnQgdG8gaGVscCBvcGVuIHNvdXJjZSBiZWNvbWUg
c3VzdGFpbmFibGUsIHJpc2UgdXAgYW5kIGhlbHAgaHVtYW5pdHkgd3JpdGUgbmV3
IHJ1bGVzIGZvciBzb2NpZXR5LCB0aGF0IGtlZXAgcG93ZXIgYW5kIGNhcGl0YWxp
c3QgdGhpcnN0IGFjY291bnRhYmxlIGZvciBhYnVzZS4gSWYgeW91IGFyZSB3b25k
ZXJpbmcgd2hhdOkgdGhhdCBsb29rcyBsaWtlLCBoZXJlIGFyZSBzb21lIGluaXRp
YWwgc3VnZ2VzdGlvbnMgb2YgY29uY3JldGUgYWN0aW9ucyB0byB0YWtlOgoKLSBP
bmx5IGFjY2VwdCBqb2JzIGF0IGNvbXBhbmllcyB0aGF0IGRvbmF0ZSBhIHNpZ25p
ZmljYW50IHBvcnRpb24gb2YgdGhlaXIgcHJvZml0IChhdCBsZWFzdCAwLDUlKSB0
byBvcGVuIHNvdXJjZSwgb3IgY29tcGFuaWVzIHdoaWNoIGRvbid0IGZ1bmRhbWVu
dGFsbHkgZGVwZW5kIG9uIG9wZW4gc291cmNlIGZvciB0aGVpciBwcm9kdWN0cwot
IERvbmF0ZSB0byBvcGVuIHNvdXJjZSBpZiB5b3UgaGF2ZSBhIGRlY2VudCBlbm91
Z2ggc2FsYXJ5Ci0gRG9uJ3QgZGlzY2FyZCB1bmlvbml6aW5nIChJIGFtIHdyaXRp
bmcgdGhpcyBpbiBGaW5sYW5kLCB3aGVyZSA2NSUgb2YgYWxsIHdvcmtlcnMgYXJl
IGluIHVuaW9ucykKLSBEb24ndCBkaXNjYXJkIFthbHRlcm5hdGl2ZSBsaWNlbnNl
c10oaHR0cHM6Ly9saWNlbnNlemVyby5jb20vKSBmb3IgbmV3IHByb2plY+d0cwot
IFByZXNzdXJlIE1pY3Jvc29mdCB0byBkb25hdGUgbWlsbGlvbnMgdG8gb3BlbiBz
b3VyY2UgcHJvamVjdHMKLSBFeHBvc2UgdGhlIHRydXRoIG9uIGhvdyBjb21wYW5p
ZXMgYXJlIGJlaGF2aW5nIGJ5IHB1Ymxpc2hpbuRnIGRhdGEgc3R1ZGllcyBs42lr
ZSB0aGlz4iBvbmUAwsBcBAABCgAQBQJdAkckCRCe3iPqfopIkAAACoYIAC0NJXRA
xY39ZpghPK5bSvbGOhHF1q9smnmNiZWID7reYCVkAbEprjHJgQXjafvCPxhTR4rC
NvDlqQqCyb7RrSli6+zl//9hr4FjbqvJqtGRejpvar4o1SSQ40+e0qq42FvtBAea
ro/kHPUAAC6/x626eOpN4JT5tvRuk6ky9eJzLsv4u3zuzx9liGk4hsXMNNR0Svw/
zuw8bwR9m3RZwRWZj5W5izIW4ByOchrxEXygLOZ78bp/ZX5r35S8wOg6reJ3rBa0
vsBVmtX+W1ymeHQyjLP7d7y10nJsL4RtxrDb/CVXmUuEu9CetWhZG+4knu59EM/8
eFu7X6vLPwohj3c=
=v1Hy
-----END PGP MESSAGE-----
